// This header file was auto-generated by ClassMate++
// Created: 26 Sep 2019 2:36:23 pm
// Copyright (c) 2019, HurleyWorks

#pragma  once

#include <string>

template <typename T>
struct SbtRecord
{
	__align__(OPTIX_SBT_RECORD_ALIGNMENT) char header[OPTIX_SBT_RECORD_HEADER_SIZE];
	T data;
};

struct EmptyData {};

using EmptyRecord = SbtRecord<EmptyData>;

struct RayGenData
{
	float3 cam_eye;
	float3 camera_u, camera_v, camera_w;
};

enum PickRayType
{
	PICK_RAY_TYPE_PICK,
	PICK_RAY_TYPE_PAD,
	PICK_RAY_TYPE_COUNT,
};

struct PickingPayload
{
	uint32_t meshID;
	uint32_t primitiveID;
};

const uint32_t NUM_PICKING_PAYLOAD_VALUES = 2u;
const uint32_t NUM_WHITTED_PAYLOAD_VALUES = 4u;


struct MissData
{
	float r, g, b;
};

struct HitGroupSBT
{
	OptixGeometryData geometry_data;
	OptixMaterialData material_data;

};

enum WhitedRayType
{
	WHITTED_RAY_TYPE_RADIANCE,
	WHITTED_RAY_TYPE_OCCLUSION,
	WHITTED_RAY_TYPE_COUNT,
};

struct WhittedPayload
{
	float3 result;
	float  importance;
	int    depth;
};

using RaygenRecord = SbtRecord<RayGenData>;
using MissRecord = SbtRecord<MissData>;
using HitGroupRecord = SbtRecord<HitGroupSBT>;

const std::string pickHitName = "PickHit";
const std::string pickMissName = "PickMiss";
const std::string pickGenName = "PickGen";

// view program group names
const std::string radianceMissName = "radiance_miss_group";
const std::string occlusionMissName = "occlusion_miss_group";

const std::string radianceHitName = "hit_group_radiance";
const std::string occlusionHitName = "hit_group_occlusion";

const std::string raygenName = "raygen_group";