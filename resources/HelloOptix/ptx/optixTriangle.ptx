//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25769353
// Cuda compilation tools, release 10.1, V10.1.105
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	__raygen__rg
.const .align 8 .b8 params[32];

.visible .entry __raygen__rg(

)
{
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<54>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<7>;


	// inline asm
	call (%r1), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%r4), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_launch_dimension_y, ();
	// inline asm
	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.f32 	%f10, [%rd1+12];
	ld.f32 	%f11, [%rd1+16];
	ld.f32 	%f12, [%rd1+20];
	ld.f32 	%f13, [%rd1+24];
	ld.f32 	%f14, [%rd1+28];
	ld.f32 	%f15, [%rd1+32];
	ld.f32 	%f16, [%rd1+36];
	ld.f32 	%f17, [%rd1+40];
	ld.f32 	%f18, [%rd1+44];
	cvt.rn.f32.u32	%f19, %r1;
	cvt.rn.f32.u32	%f20, %r4;
	div.rn.f32 	%f21, %f19, %f20;
	cvt.rn.f32.u32	%f22, %r2;
	cvt.rn.f32.u32	%f23, %r5;
	div.rn.f32 	%f24, %f22, %f23;
	fma.rn.f32 	%f25, %f21, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f26, %f24, 0f40000000, 0fBF800000;
	ld.f32 	%f1, [%rd1];
	ld.f32 	%f2, [%rd1+4];
	ld.f32 	%f3, [%rd1+8];
	mul.f32 	%f27, %f13, %f26;
	mul.f32 	%f28, %f14, %f26;
	mul.f32 	%f29, %f15, %f26;
	fma.rn.f32 	%f30, %f10, %f25, %f27;
	fma.rn.f32 	%f31, %f11, %f25, %f28;
	fma.rn.f32 	%f32, %f12, %f25, %f29;
	add.f32 	%f33, %f16, %f30;
	add.f32 	%f34, %f17, %f31;
	add.f32 	%f35, %f18, %f32;
	mul.f32 	%f36, %f34, %f34;
	fma.rn.f32 	%f37, %f33, %f33, %f36;
	fma.rn.f32 	%f38, %f35, %f35, %f37;
	sqrt.rn.f32 	%f39, %f38;
	rcp.rn.f32 	%f40, %f39;
	mul.f32 	%f4, %f40, %f33;
	mul.f32 	%f5, %f40, %f34;
	mul.f32 	%f6, %f40, %f35;
	ld.const.u64 	%rd2, [params+24];
	mov.u32 	%r10, 1;
	mov.u32 	%r14, 0;
	mov.u32 	%r17, 1056964608;
	mov.f32 	%f8, 0f5A0E1BCA;
	mov.f32 	%f9, 0f00000000;
	// inline asm
	call (%r7, %r8, %r9), _optix_trace_3, (%rd2, %f1, %f2, %f3, %f4, %f5, %f6, %f9, %f8, %f9, %r10, %r14, %r14, %r14, %r14, %r17, %r17, %r17);
	// inline asm
	mov.b32 	 %f41, %r7;
	mov.b32 	 %f42, %r8;
	mov.b32 	 %f43, %r9;
	ld.const.u64 	%rd3, [params];
	cvta.to.global.u64 	%rd4, %rd3;
	ld.const.u32 	%r18, [params+8];
	mad.lo.s32 	%r19, %r18, %r2, %r1;
	mov.f32 	%f44, 0f3F800000;
	min.f32 	%f45, %f41, %f44;
	max.f32 	%f46, %f9, %f45;
	mul.f32 	%f47, %f46, 0f437F0000;
	cvt.rzi.u32.f32	%r20, %f47;
	min.f32 	%f48, %f42, %f44;
	max.f32 	%f49, %f9, %f48;
	mul.f32 	%f50, %f49, 0f437F0000;
	cvt.rzi.u32.f32	%r21, %f50;
	min.f32 	%f51, %f43, %f44;
	max.f32 	%f52, %f9, %f51;
	mul.f32 	%f53, %f52, 0f437F0000;
	cvt.rzi.u32.f32	%r22, %f53;
	mul.wide.u32 	%rd5, %r19, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvt.u16.u32	%rs1, %r22;
	cvt.u16.u32	%rs2, %r21;
	cvt.u16.u32	%rs3, %r20;
	mov.u16 	%rs4, 255;
	st.global.v4.u8 	[%rd6], {%rs3, %rs2, %rs1, %rs4};
	ret;
}

	// .globl	__miss__ms
.visible .entry __miss__ms(

)
{
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<2>;


	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u32 	%r4, [%rd1];
	ld.u32 	%r5, [%rd1+4];
	ld.u32 	%r6, [%rd1+8];
	// inline asm
	call _optix_set_payload_0, (%r4);
	// inline asm
	// inline asm
	call _optix_set_payload_1, (%r5);
	// inline asm
	// inline asm
	call _optix_set_payload_2, (%r6);
	// inline asm
	ret;
}

	// .globl	__closesthit__ch
.visible .entry __closesthit__ch(

)
{
	.reg .f32 	%f<3>;
	.reg .b32 	%r<4>;


	// inline asm
	call (%f1, %f2), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.b32 	 %r1, %f1;
	// inline asm
	call _optix_set_payload_0, (%r1);
	// inline asm
	mov.b32 	 %r2, %f2;
	// inline asm
	call _optix_set_payload_1, (%r2);
	// inline asm
	mov.u32 	%r3, 1065353216;
	// inline asm
	call _optix_set_payload_2, (%r3);
	// inline asm
	ret;
}


