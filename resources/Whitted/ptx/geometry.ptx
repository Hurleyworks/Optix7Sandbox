//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25769353
// Cuda compilation tools, release 10.1, V10.1.105
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	__intersection__parallelogram
.const .align 8 .b8 params[88];

.visible .entry __intersection__parallelogram(

)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<60>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<3>;


	// inline asm
	call (%rd2), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%f18), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f19), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f20), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f21), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f22), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f23), _optix_get_world_ray_direction_z, ();
	// inline asm
	// inline asm
	call (%f24), _optix_get_ray_tmin, ();
	// inline asm
	// inline asm
	call (%f25), _optix_get_ray_tmax, ();
	// inline asm
	ld.v4.f32 	{%f26, %f27, %f28, %f29}, [%rd2];
	mul.f32 	%f30, %f22, %f27;
	fma.rn.f32 	%f31, %f21, %f26, %f30;
	fma.rn.f32 	%f32, %f23, %f28, %f31;
	mul.f32 	%f33, %f19, %f27;
	fma.rn.f32 	%f34, %f18, %f26, %f33;
	fma.rn.f32 	%f35, %f20, %f28, %f34;
	sub.f32 	%f36, %f29, %f35;
	div.rn.f32 	%f12, %f36, %f32;
	setp.leu.f32	%p1, %f12, %f24;
	setp.geu.f32	%p2, %f12, %f25;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB0_4;

	fma.rn.f32 	%f37, %f21, %f12, %f18;
	fma.rn.f32 	%f38, %f22, %f12, %f19;
	fma.rn.f32 	%f39, %f23, %f12, %f20;
	ld.v2.f32 	{%f40, %f41}, [%rd2+40];
	sub.f32 	%f13, %f37, %f40;
	sub.f32 	%f14, %f38, %f41;
	ld.f32 	%f44, [%rd2+48];
	sub.f32 	%f15, %f39, %f44;
	ld.v4.f32 	{%f45, %f46, %f47, %f48}, [%rd2+16];
	mul.f32 	%f52, %f14, %f46;
	fma.rn.f32 	%f53, %f13, %f45, %f52;
	fma.rn.f32 	%f16, %f15, %f47, %f53;
	setp.gtu.f32	%p4, %f16, 0f3F800000;
	setp.ltu.f32	%p5, %f16, 0f00000000;
	or.pred  	%p6, %p5, %p4;
	@%p6 bra 	BB0_4;

	ld.f32 	%f54, [%rd2+28];
	ld.f32 	%f55, [%rd2+32];
	mul.f32 	%f56, %f14, %f55;
	fma.rn.f32 	%f57, %f13, %f54, %f56;
	ld.f32 	%f58, [%rd2+36];
	fma.rn.f32 	%f17, %f15, %f58, %f57;
	setp.gtu.f32	%p7, %f17, 0f3F800000;
	setp.ltu.f32	%p8, %f17, 0f00000000;
	or.pred  	%p9, %p8, %p7;
	@%p9 bra 	BB0_4;

	mov.b32 	 %r6, %f16;
	mov.u32 	%r2, 0;
	mov.b32 	 %r3, %f26;
	mov.b32 	 %r4, %f27;
	mov.b32 	 %r7, %f17;
	mov.b32 	 %r5, %f28;
	// inline asm
	call (%r1), _optix_report_intersection_5, (%f12, %r2, %r3, %r4, %r5, %r6, %r7);
	// inline asm

BB0_4:
	ret;
}

	// .globl	__intersection__sphere
.visible .entry __intersection__sphere(

)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<85>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<2>;


	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%f32), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f33), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f34), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f35), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f36), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f37), _optix_get_world_ray_direction_z, ();
	// inline asm
	// inline asm
	call (%f38), _optix_get_ray_tmin, ();
	// inline asm
	// inline asm
	call (%f39), _optix_get_ray_tmax, ();
	// inline asm
	ld.f32 	%f40, [%rd1];
	sub.f32 	%f3, %f32, %f40;
	ld.f32 	%f41, [%rd1+4];
	sub.f32 	%f4, %f33, %f41;
	ld.f32 	%f42, [%rd1+8];
	sub.f32 	%f5, %f34, %f42;
	mul.f32 	%f43, %f36, %f36;
	fma.rn.f32 	%f44, %f35, %f35, %f43;
	fma.rn.f32 	%f45, %f37, %f37, %f44;
	sqrt.rn.f32 	%f46, %f45;
	rcp.rn.f32 	%f6, %f46;
	mul.f32 	%f7, %f35, %f6;
	mul.f32 	%f8, %f36, %f6;
	mul.f32 	%f9, %f37, %f6;
	mul.f32 	%f47, %f4, %f8;
	fma.rn.f32 	%f48, %f3, %f7, %f47;
	fma.rn.f32 	%f82, %f5, %f9, %f48;
	mul.f32 	%f49, %f4, %f4;
	fma.rn.f32 	%f50, %f3, %f3, %f49;
	fma.rn.f32 	%f51, %f5, %f5, %f50;
	ld.f32 	%f11, [%rd1+12];
	mul.f32 	%f12, %f11, %f11;
	sub.f32 	%f52, %f51, %f12;
	mul.f32 	%f53, %f82, %f82;
	sub.f32 	%f13, %f53, %f52;
	setp.leu.f32	%p1, %f13, 0f00000000;
	@%p1 bra 	BB1_8;

	sqrt.rn.f32 	%f83, %f13;
	neg.f32 	%f55, %f82;
	sub.f32 	%f15, %f55, %f83;
	abs.f32 	%f16, %f15;
	mul.f32 	%f17, %f11, 0f41200000;
	mov.f32 	%f84, 0f00000000;
	setp.leu.f32	%p2, %f16, %f17;
	@%p2 bra 	BB1_4;

	fma.rn.f32 	%f57, %f7, %f15, %f3;
	fma.rn.f32 	%f58, %f8, %f15, %f4;
	fma.rn.f32 	%f59, %f9, %f15, %f5;
	mul.f32 	%f60, %f8, %f58;
	fma.rn.f32 	%f61, %f7, %f57, %f60;
	fma.rn.f32 	%f82, %f9, %f59, %f61;
	mul.f32 	%f62, %f58, %f58;
	fma.rn.f32 	%f63, %f57, %f57, %f62;
	fma.rn.f32 	%f64, %f59, %f59, %f63;
	sub.f32 	%f65, %f64, %f12;
	mul.f32 	%f66, %f82, %f82;
	sub.f32 	%f19, %f66, %f65;
	setp.leu.f32	%p3, %f19, 0f00000000;
	@%p3 bra 	BB1_4;

	sqrt.rn.f32 	%f83, %f19;
	neg.f32 	%f67, %f82;
	sub.f32 	%f84, %f67, %f83;

BB1_4:
	add.f32 	%f25, %f15, %f84;
	mul.f32 	%f26, %f6, %f25;
	setp.leu.f32	%p4, %f26, %f38;
	setp.geu.f32	%p5, %f26, %f39;
	rcp.rn.f32 	%f27, %f11;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB1_6;

	fma.rn.f32 	%f69, %f7, %f25, %f3;
	fma.rn.f32 	%f70, %f8, %f25, %f4;
	fma.rn.f32 	%f71, %f9, %f25, %f5;
	mul.f32 	%f72, %f27, %f69;
	mul.f32 	%f73, %f27, %f70;
	mul.f32 	%f74, %f27, %f71;
	mov.b32 	 %r3, %f72;
	mov.b32 	 %r4, %f73;
	mov.b32 	 %r5, %f74;
	mov.u32 	%r2, 0;
	// inline asm
	call (%r1), _optix_report_intersection_3, (%f26, %r2, %r3, %r4, %r5);
	// inline asm
	setp.ne.s32	%p7, %r1, 0;
	@%p7 bra 	BB1_8;

BB1_6:
	setp.gt.f32	%p8, %f16, %f17;
	selp.f32	%f75, %f15, 0f00000000, %p8;
	sub.f32 	%f76, %f83, %f82;
	add.f32 	%f77, %f75, %f76;
	mul.f32 	%f28, %f6, %f77;
	fma.rn.f32 	%f78, %f7, %f77, %f3;
	fma.rn.f32 	%f79, %f8, %f77, %f4;
	fma.rn.f32 	%f80, %f9, %f77, %f5;
	mul.f32 	%f29, %f27, %f78;
	mul.f32 	%f30, %f27, %f79;
	mul.f32 	%f31, %f27, %f80;
	setp.leu.f32	%p9, %f28, %f38;
	setp.geu.f32	%p10, %f28, %f39;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	BB1_8;

	mov.b32 	 %r10, %f31;
	mov.b32 	 %r8, %f29;
	mov.b32 	 %r9, %f30;
	mov.u32 	%r7, 0;
	// inline asm
	call (%r6), _optix_report_intersection_3, (%f28, %r7, %r8, %r9, %r10);
	// inline asm

BB1_8:
	ret;
}

	// .globl	__intersection__sphere_shell
.visible .entry __intersection__sphere_shell(

)
{
	.reg .pred 	%p<13>;
	.reg .f32 	%f<109>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<2>;


	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%f30), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f31), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f32), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f33), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f34), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f35), _optix_get_world_ray_direction_z, ();
	// inline asm
	// inline asm
	call (%f36), _optix_get_ray_tmin, ();
	// inline asm
	// inline asm
	call (%f37), _optix_get_ray_tmax, ();
	// inline asm
	ld.f32 	%f38, [%rd1];
	sub.f32 	%f3, %f30, %f38;
	ld.f32 	%f39, [%rd1+4];
	sub.f32 	%f4, %f31, %f39;
	ld.f32 	%f40, [%rd1+8];
	sub.f32 	%f5, %f32, %f40;
	mul.f32 	%f41, %f34, %f34;
	fma.rn.f32 	%f42, %f33, %f33, %f41;
	fma.rn.f32 	%f43, %f35, %f35, %f42;
	sqrt.rn.f32 	%f44, %f43;
	rcp.rn.f32 	%f6, %f44;
	mul.f32 	%f7, %f33, %f6;
	mul.f32 	%f8, %f34, %f6;
	mul.f32 	%f9, %f35, %f6;
	mul.f32 	%f45, %f4, %f8;
	fma.rn.f32 	%f46, %f3, %f7, %f45;
	fma.rn.f32 	%f10, %f5, %f9, %f46;
	mul.f32 	%f11, %f10, %f10;
	mul.f32 	%f47, %f4, %f4;
	fma.rn.f32 	%f48, %f3, %f3, %f47;
	fma.rn.f32 	%f12, %f5, %f5, %f48;
	ld.f32 	%f13, [%rd1+12];
	ld.f32 	%f14, [%rd1+16];
	mul.f32 	%f15, %f14, %f14;
	ld.const.f32 	%f16, [params+72];
	add.f32 	%f49, %f15, %f16;
	setp.gt.f32	%p1, %f12, %f49;
	@%p1 bra 	BB2_12;
	bra.uni 	BB2_1;

BB2_12:
	sub.f32 	%f93, %f12, %f11;
	sub.f32 	%f94, %f15, %f16;
	setp.geu.f32	%p11, %f93, %f94;
	@%p11 bra 	BB2_15;

	sub.f32 	%f95, %f12, %f15;
	sub.f32 	%f29, %f11, %f95;
	setp.leu.f32	%p12, %f29, 0f00000000;
	@%p12 bra 	BB2_15;

	neg.f32 	%f97, %f10;
	sqrt.rn.f32 	%f98, %f29;
	sub.f32 	%f99, %f97, %f98;
	fma.rn.f32 	%f100, %f7, %f99, %f3;
	fma.rn.f32 	%f101, %f8, %f99, %f4;
	fma.rn.f32 	%f102, %f9, %f99, %f5;
	rcp.rn.f32 	%f103, %f14;
	mul.f32 	%f104, %f103, %f100;
	mul.f32 	%f105, %f103, %f101;
	mul.f32 	%f106, %f103, %f102;
	mov.b32 	 %r23, %f104;
	mov.b32 	 %r24, %f105;
	mov.b32 	 %r25, %f106;
	mul.f32 	%f96, %f6, %f99;
	mov.u32 	%r22, 1;
	// inline asm
	call (%r21), _optix_report_intersection_3, (%f96, %r22, %r23, %r24, %r25);
	// inline asm
	bra.uni 	BB2_15;

BB2_1:
	mul.f32 	%f50, %f13, %f13;
	sub.f32 	%f51, %f12, %f50;
	sub.f32 	%f17, %f11, %f51;
	setp.gt.f32	%p2, %f17, 0f00000000;
	@%p2 bra 	BB2_5;
	bra.uni 	BB2_2;

BB2_5:
	neg.f32 	%f63, %f10;
	sqrt.rn.f32 	%f21, %f17;
	sub.f32 	%f22, %f63, %f21;
	mul.f32 	%f23, %f6, %f22;
	setp.gt.f32	%p4, %f23, %f36;
	setp.lt.f32	%p5, %f23, %f37;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB2_11;
	bra.uni 	BB2_6;

BB2_11:
	fma.rn.f32 	%f85, %f7, %f22, %f3;
	fma.rn.f32 	%f86, %f8, %f22, %f4;
	fma.rn.f32 	%f87, %f9, %f22, %f5;
	mov.f32 	%f88, 0fBF800000;
	div.rn.f32 	%f89, %f88, %f13;
	mul.f32 	%f90, %f85, %f89;
	mul.f32 	%f91, %f86, %f89;
	mul.f32 	%f92, %f87, %f89;
	mov.b32 	 %r18, %f90;
	mov.b32 	 %r19, %f91;
	mov.b32 	 %r20, %f92;
	mov.u32 	%r17, 4;
	// inline asm
	call (%r16), _optix_report_intersection_3, (%f23, %r17, %r18, %r19, %r20);
	// inline asm
	bra.uni 	BB2_15;

BB2_2:
	sub.f32 	%f53, %f12, %f15;
	sub.f32 	%f18, %f11, %f53;
	mov.f32 	%f107, 0f00000000;
	setp.leu.f32	%p3, %f18, 0f00000000;
	@%p3 bra 	BB2_4;

	sqrt.rn.f32 	%f107, %f18;

BB2_4:
	sub.f32 	%f55, %f107, %f10;
	fma.rn.f32 	%f56, %f7, %f55, %f3;
	fma.rn.f32 	%f57, %f8, %f55, %f4;
	fma.rn.f32 	%f58, %f9, %f55, %f5;
	rcp.rn.f32 	%f59, %f14;
	mul.f32 	%f60, %f59, %f56;
	mul.f32 	%f61, %f59, %f57;
	mul.f32 	%f62, %f59, %f58;
	mov.b32 	 %r3, %f60;
	mov.b32 	 %r4, %f61;
	mov.b32 	 %r5, %f62;
	mul.f32 	%f54, %f6, %f55;
	mov.u32 	%r2, 2;
	// inline asm
	call (%r1), _optix_report_intersection_3, (%f54, %r2, %r3, %r4, %r5);
	// inline asm
	bra.uni 	BB2_15;

BB2_6:
	sub.f32 	%f24, %f21, %f10;
	mul.f32 	%f25, %f6, %f24;
	setp.gt.f32	%p7, %f25, %f36;
	setp.lt.f32	%p8, %f25, %f37;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB2_10;
	bra.uni 	BB2_7;

BB2_10:
	fma.rn.f32 	%f76, %f7, %f24, %f3;
	fma.rn.f32 	%f77, %f8, %f24, %f4;
	fma.rn.f32 	%f78, %f9, %f24, %f5;
	mov.f32 	%f79, 0fBF800000;
	div.rn.f32 	%f80, %f79, %f13;
	mul.f32 	%f81, %f76, %f80;
	mul.f32 	%f82, %f77, %f80;
	mul.f32 	%f83, %f78, %f80;
	mov.b32 	 %r13, %f81;
	mov.b32 	 %r14, %f82;
	mov.b32 	 %r15, %f83;
	mov.u32 	%r12, 8;
	// inline asm
	call (%r11), _optix_report_intersection_3, (%f25, %r12, %r13, %r14, %r15);
	// inline asm
	bra.uni 	BB2_15;

BB2_7:
	sub.f32 	%f65, %f12, %f15;
	sub.f32 	%f26, %f11, %f65;
	mov.f32 	%f108, 0f00000000;
	setp.leu.f32	%p10, %f26, 0f00000000;
	@%p10 bra 	BB2_9;

	sqrt.rn.f32 	%f108, %f26;

BB2_9:
	sub.f32 	%f67, %f108, %f10;
	fma.rn.f32 	%f68, %f7, %f67, %f3;
	fma.rn.f32 	%f69, %f8, %f67, %f4;
	fma.rn.f32 	%f70, %f9, %f67, %f5;
	rcp.rn.f32 	%f71, %f14;
	mul.f32 	%f72, %f71, %f68;
	mul.f32 	%f73, %f71, %f69;
	mul.f32 	%f74, %f71, %f70;
	mov.b32 	 %r8, %f72;
	mov.b32 	 %r9, %f73;
	mov.b32 	 %r10, %f74;
	mul.f32 	%f66, %f6, %f67;
	mov.u32 	%r7, 2;
	// inline asm
	call (%r6), _optix_report_intersection_3, (%f66, %r7, %r8, %r9, %r10);
	// inline asm

BB2_15:
	ret;
}


