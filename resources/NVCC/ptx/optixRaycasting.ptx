//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25769353
// Cuda compilation tools, release 10.1, V10.1.105
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	__raygen__from_buffer
.const .align 8 .b8 params[24];

.visible .entry __raygen__from_buffer(

)
{
	.reg .f32 	%f<10>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<10>;


	// inline asm
	call (%r1), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%r3), _optix_get_launch_index_z, ();
	// inline asm
	// inline asm
	call (%r4), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_launch_dimension_y, ();
	// inline asm
	mad.lo.s32 	%r20, %r5, %r3, %r2;
	mad.lo.s32 	%r21, %r20, %r4, %r1;
	ld.const.u64 	%rd2, [params+8];
	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.u32 	%rd4, %r21, 32;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	ld.global.f32 	%f2, [%rd5+4];
	ld.global.f32 	%f3, [%rd5+8];
	ld.global.f32 	%f7, [%rd5+12];
	ld.global.f32 	%f4, [%rd5+16];
	ld.global.f32 	%f5, [%rd5+20];
	ld.global.f32 	%f6, [%rd5+24];
	ld.global.f32 	%f8, [%rd5+28];
	ld.const.u64 	%rd1, [params];
	mov.u32 	%r14, 1;
	mov.u32 	%r15, 0;
	mov.f32 	%f9, 0f00000000;
	// inline asm
	call (%r7, %r8, %r9, %r10), _optix_trace_4, (%rd1, %f1, %f2, %f3, %f4, %f5, %f6, %f7, %f8, %f9, %r14, %r15, %r15, %r14, %r15, %r22, %r23, %r24, %r25);
	// inline asm
	ld.const.u64 	%rd6, [params+16];
	cvta.to.global.u64 	%rd7, %rd6;
	mul.wide.u32 	%rd8, %r21, 16;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u32 	[%rd9], %r7;
	st.global.u32 	[%rd9+4], %r8;
	st.global.u32 	[%rd9+8], %r9;
	st.global.u32 	[%rd9+12], %r10;
	ret;
}

	// .globl	__miss__buffer_miss
.visible .entry __miss__buffer_miss(

)
{
	.reg .b32 	%r<5>;


	mov.u32 	%r1, -1082130432;
	// inline asm
	call _optix_set_payload_0, (%r1);
	// inline asm
	mov.u32 	%r2, 1065353216;
	// inline asm
	call _optix_set_payload_1, (%r2);
	// inline asm
	mov.u32 	%r4, 0;
	// inline asm
	call _optix_set_payload_2, (%r4);
	// inline asm
	// inline asm
	call _optix_set_payload_3, (%r4);
	// inline asm
	ret;
}

	// .globl	__closesthit__buffer_hit
.visible .entry __closesthit__buffer_hit(

)
{
	.reg .pred 	%p<35>;
	.reg .b16 	%rs<14>;
	.reg .f32 	%f<843>;
	.reg .b32 	%r<490>;
	.reg .b64 	%rd<425>;


	// inline asm
	call (%f285), _optix_get_ray_tmax, ();
	// inline asm
	cvt.rzi.u32.f32	%r1, %f285;
	// inline asm
	call (%rd31), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u32 	%r23, [%rd31];
	setp.ne.s32	%p1, %r23, 0;
	@%p1 bra 	BB2_62;

	// inline asm
	call (%r24), _optix_read_primitive_idx, ();
	// inline asm
	// inline asm
	call (%f287, %f288), _optix_get_triangle_barycentrics, ();
	// inline asm
	ld.u16 	%rs1, [%rd31+22];
	setp.eq.s16	%p2, %rs1, 4;
	ld.u64 	%rd2, [%rd31+8];
	@%p2 bra 	BB2_3;
	bra.uni 	BB2_2;

BB2_3:
	mul.wide.u32 	%rd38, %r24, 12;
	add.s64 	%rd39, %rd2, %rd38;
	ld.u32 	%r486, [%rd39];
	ld.u32 	%r485, [%rd39+4];
	ld.u32 	%r484, [%rd39+8];
	bra.uni 	BB2_4;

BB2_2:
	mul.lo.s32 	%r25, %r24, 3;
	mul.wide.u32 	%rd32, %r25, 2;
	add.s64 	%rd33, %rd2, %rd32;
	add.s32 	%r26, %r25, 1;
	mul.wide.u32 	%rd34, %r26, 2;
	add.s64 	%rd35, %rd2, %rd34;
	add.s32 	%r27, %r25, 2;
	mul.wide.u32 	%rd36, %r27, 2;
	add.s64 	%rd37, %rd2, %rd36;
	ld.u16 	%r486, [%rd33];
	ld.u16 	%r485, [%rd35];
	ld.u16 	%r484, [%rd37];

BB2_4:
	ld.u16 	%rd40, [%rd31+36];
	setp.eq.s64	%p3, %rd40, 0;
	selp.b64	%rd41, 12, %rd40, %p3;
	cvt.u64.u32	%rd3, %r486;
	mul.lo.s64 	%rd42, %rd41, %rd3;
	ld.u64 	%rd43, [%rd31+24];
	add.s64 	%rd44, %rd42, %rd43;
	ld.f32 	%f5, [%rd44];
	ld.f32 	%f6, [%rd44+4];
	ld.f32 	%f7, [%rd44+8];
	cvt.u64.u32	%rd4, %r485;
	mul.lo.s64 	%rd45, %rd41, %rd4;
	add.s64 	%rd46, %rd45, %rd43;
	ld.f32 	%f8, [%rd46];
	ld.f32 	%f9, [%rd46+4];
	ld.f32 	%f10, [%rd46+8];
	cvt.u64.u32	%rd5, %r484;
	mul.lo.s64 	%rd47, %rd41, %rd5;
	add.s64 	%rd48, %rd47, %rd43;
	ld.f32 	%f11, [%rd48];
	ld.f32 	%f12, [%rd48+4];
	ld.f32 	%f13, [%rd48+8];
	// inline asm
	call (%r28), _optix_get_transform_list_size, ();
	// inline asm
	setp.eq.s32	%p4, %r28, 0;
	@%p4 bra 	BB2_18;

	// inline asm
	call (%f289), _optix_get_ray_time, ();
	// inline asm
	add.s32 	%r487, %r28, -1;
	setp.lt.s32	%p5, %r487, 0;
	@%p5 bra 	BB2_18;

BB2_6:
	.pragma "nounroll";
	// inline asm
	call (%rd49), _optix_get_transform_list_handle, (%r487);
	// inline asm
	// inline asm
	call (%r30), _optix_get_transform_type_from_handle, (%rd49);
	// inline asm
	and.b32  	%r31, %r30, -2;
	setp.eq.s32	%p6, %r31, 2;
	@%p6 bra 	BB2_12;
	bra.uni 	BB2_7;

BB2_12:
	setp.eq.s32	%p9, %r30, 2;
	@%p9 bra 	BB2_15;
	bra.uni 	BB2_13;

BB2_15:
	// inline asm
	call (%rd123), _optix_get_matrix_motion_transform_from_handle, (%rd49);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd125, %rd123;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r119,%r120,%r121,%r122}, [%rd125];
	// inline asm
	mov.b32	{%rs4, %rs5}, %r121;
	add.s64 	%rd129, %rd123, 16;
	// inline asm
	cvta.to.global.u64 %rd128, %rd129;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r123,%r124,%r125,%r126}, [%rd128];
	// inline asm
	add.s64 	%rd132, %rd123, 32;
	// inline asm
	cvta.to.global.u64 %rd131, %rd132;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r127,%r128,%r129,%r130}, [%rd131];
	// inline asm
	add.s64 	%rd135, %rd123, 48;
	// inline asm
	cvta.to.global.u64 %rd134, %rd135;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r131,%r132,%r133,%r134}, [%rd134];
	// inline asm
	add.s64 	%rd138, %rd123, 64;
	// inline asm
	cvta.to.global.u64 %rd137, %rd138;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r135,%r136,%r137,%r138}, [%rd137];
	// inline asm
	add.s64 	%rd141, %rd123, 80;
	// inline asm
	cvta.to.global.u64 %rd140, %rd141;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r139,%r140,%r141,%r142}, [%rd140];
	// inline asm
	add.s64 	%rd144, %rd123, 96;
	// inline asm
	cvta.to.global.u64 %rd143, %rd144;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r143,%r144,%r145,%r146}, [%rd143];
	// inline asm
	add.s64 	%rd147, %rd123, 112;
	// inline asm
	cvta.to.global.u64 %rd146, %rd147;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r147,%r148,%r149,%r150}, [%rd146];
	// inline asm
	mov.b32 	 %f302, %r122;
	mov.b32 	 %f303, %r123;
	cvt.u32.u16	%r163, %rs4;
	add.s32 	%r164, %r163, -1;
	cvt.rn.f32.s32	%f304, %r164;
	sub.f32 	%f305, %f289, %f302;
	mul.f32 	%f306, %f305, %f304;
	sub.f32 	%f307, %f303, %f302;
	div.rn.f32 	%f308, %f306, %f307;
	min.f32 	%f309, %f304, %f308;
	mov.f32 	%f310, 0f00000000;
	max.f32 	%f311, %f310, %f309;
	cvt.rmi.f32.f32	%f312, %f311;
	cvt.rzi.s32.f32	%r165, %f312;
	cvt.s64.s32	%rd13, %r165;
	mul.wide.s32 	%rd158, %r165, 48;
	add.s64 	%rd150, %rd132, %rd158;
	// inline asm
	cvta.to.global.u64 %rd149, %rd150;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r151,%r152,%r153,%r154}, [%rd149];
	// inline asm
	add.s64 	%rd153, %rd150, 16;
	// inline asm
	cvta.to.global.u64 %rd152, %rd153;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r155,%r156,%r157,%r158}, [%rd152];
	// inline asm
	add.s64 	%rd156, %rd150, 32;
	// inline asm
	cvta.to.global.u64 %rd155, %rd156;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r159,%r160,%r161,%r162}, [%rd155];
	// inline asm
	sub.f32 	%f313, %f311, %f312;
	setp.leu.f32	%p11, %f313, 0f00000000;
	@%p11 bra 	BB2_17;

	mul.lo.s64 	%rd168, %rd13, 48;
	add.s64 	%rd169, %rd123, %rd168;
	add.s64 	%rd160, %rd169, 80;
	// inline asm
	cvta.to.global.u64 %rd159, %rd160;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r166,%r167,%r168,%r169}, [%rd159];
	// inline asm
	add.s64 	%rd163, %rd169, 96;
	// inline asm
	cvta.to.global.u64 %rd162, %rd163;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r170,%r171,%r172,%r173}, [%rd162];
	// inline asm
	add.s64 	%rd166, %rd169, 112;
	// inline asm
	cvta.to.global.u64 %rd165, %rd166;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r174,%r175,%r176,%r177}, [%rd165];
	// inline asm
	bra.uni 	BB2_17;

BB2_7:
	setp.eq.s32	%p7, %r30, 4;
	@%p7 bra 	BB2_10;
	bra.uni 	BB2_8;

BB2_10:
	// inline asm
	call (%rd422), _optix_get_instance_transform_from_handle, (%rd49);
	// inline asm
	bra.uni 	BB2_11;

BB2_13:
	// inline asm
	call (%rd64), _optix_get_srt_motion_transform_from_handle, (%rd49);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd66, %rd64;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r44,%r45,%r46,%r47}, [%rd66];
	// inline asm
	mov.b32	{%rs2, %rs3}, %r46;
	add.s64 	%rd70, %rd64, 16;
	// inline asm
	cvta.to.global.u64 %rd69, %rd70;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r48,%r49,%r50,%r51}, [%rd69];
	// inline asm
	add.s64 	%rd73, %rd64, 32;
	// inline asm
	cvta.to.global.u64 %rd72, %rd73;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r52,%r53,%r54,%r55}, [%rd72];
	// inline asm
	add.s64 	%rd76, %rd64, 48;
	// inline asm
	cvta.to.global.u64 %rd75, %rd76;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r56,%r57,%r58,%r59}, [%rd75];
	// inline asm
	add.s64 	%rd79, %rd64, 64;
	// inline asm
	cvta.to.global.u64 %rd78, %rd79;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r60,%r61,%r62,%r63}, [%rd78];
	// inline asm
	add.s64 	%rd82, %rd64, 80;
	// inline asm
	cvta.to.global.u64 %rd81, %rd82;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r64,%r65,%r66,%r67}, [%rd81];
	// inline asm
	add.s64 	%rd85, %rd64, 96;
	// inline asm
	cvta.to.global.u64 %rd84, %rd85;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r68,%r69,%r70,%r71}, [%rd84];
	// inline asm
	add.s64 	%rd88, %rd64, 112;
	// inline asm
	cvta.to.global.u64 %rd87, %rd88;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r72,%r73,%r74,%r75}, [%rd87];
	// inline asm
	add.s64 	%rd91, %rd64, 128;
	// inline asm
	cvta.to.global.u64 %rd90, %rd91;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r76,%r77,%r78,%r79}, [%rd90];
	// inline asm
	add.s64 	%rd94, %rd64, 144;
	// inline asm
	cvta.to.global.u64 %rd93, %rd94;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r80,%r81,%r82,%r83}, [%rd93];
	// inline asm
	mov.b32 	 %f290, %r47;
	mov.b32 	 %f291, %r48;
	cvt.u32.u16	%r100, %rs2;
	add.s32 	%r101, %r100, -1;
	cvt.rn.f32.s32	%f292, %r101;
	sub.f32 	%f293, %f289, %f290;
	mul.f32 	%f294, %f293, %f292;
	sub.f32 	%f295, %f291, %f290;
	div.rn.f32 	%f296, %f294, %f295;
	min.f32 	%f297, %f292, %f296;
	mov.f32 	%f298, 0f00000000;
	max.f32 	%f299, %f298, %f297;
	cvt.rmi.f32.f32	%f300, %f299;
	cvt.rzi.s32.f32	%r102, %f300;
	cvt.s64.s32	%rd11, %r102;
	mul.wide.s32 	%rd108, %r102, 64;
	add.s64 	%rd97, %rd73, %rd108;
	// inline asm
	cvta.to.global.u64 %rd96, %rd97;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r84,%r85,%r86,%r87}, [%rd96];
	// inline asm
	add.s64 	%rd100, %rd97, 16;
	// inline asm
	cvta.to.global.u64 %rd99, %rd100;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r88,%r89,%r90,%r91}, [%rd99];
	// inline asm
	add.s64 	%rd103, %rd97, 32;
	// inline asm
	cvta.to.global.u64 %rd102, %rd103;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r92,%r93,%r94,%r95}, [%rd102];
	// inline asm
	sub.f32 	%f301, %f299, %f300;
	add.s64 	%rd106, %rd97, 48;
	// inline asm
	cvta.to.global.u64 %rd105, %rd106;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r96,%r97,%r98,%r99}, [%rd105];
	// inline asm
	setp.leu.f32	%p10, %f301, 0f00000000;
	@%p10 bra 	BB2_17;

	shl.b64 	%rd121, %rd11, 6;
	add.s64 	%rd122, %rd121, %rd64;
	add.s64 	%rd110, %rd122, 96;
	// inline asm
	cvta.to.global.u64 %rd109, %rd110;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r103,%r104,%r105,%r106}, [%rd109];
	// inline asm
	add.s64 	%rd113, %rd122, 112;
	// inline asm
	cvta.to.global.u64 %rd112, %rd113;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r107,%r108,%r109,%r110}, [%rd112];
	// inline asm
	add.s64 	%rd116, %rd122, 128;
	// inline asm
	cvta.to.global.u64 %rd115, %rd116;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r111,%r112,%r113,%r114}, [%rd115];
	// inline asm
	add.s64 	%rd119, %rd122, 144;
	// inline asm
	cvta.to.global.u64 %rd118, %rd119;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r115,%r116,%r117,%r118}, [%rd118];
	// inline asm
	bra.uni 	BB2_17;

BB2_8:
	setp.ne.s32	%p8, %r30, 1;
	@%p8 bra 	BB2_17;

	// inline asm
	call (%rd51), _optix_get_static_transform_from_handle, (%rd49);
	// inline asm
	add.s64 	%rd422, %rd51, 16;

BB2_11:
	// inline asm
	cvta.to.global.u64 %rd55, %rd422;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r32,%r33,%r34,%r35}, [%rd55];
	// inline asm
	add.s64 	%rd59, %rd422, 16;
	// inline asm
	cvta.to.global.u64 %rd58, %rd59;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r36,%r37,%r38,%r39}, [%rd58];
	// inline asm
	add.s64 	%rd62, %rd422, 32;
	// inline asm
	cvta.to.global.u64 %rd61, %rd62;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r40,%r41,%r42,%r43}, [%rd61];
	// inline asm

BB2_17:
	add.s32 	%r487, %r487, -1;
	setp.gt.s32	%p12, %r487, -1;
	@%p12 bra 	BB2_6;

BB2_18:
	setp.eq.s32	%p34, %r28, 0;
	sub.f32 	%f314, %f13, %f7;
	sub.f32 	%f315, %f9, %f6;
	mul.f32 	%f316, %f315, %f314;
	sub.f32 	%f317, %f12, %f6;
	sub.f32 	%f318, %f10, %f7;
	mul.f32 	%f319, %f318, %f317;
	sub.f32 	%f320, %f316, %f319;
	sub.f32 	%f321, %f11, %f5;
	mul.f32 	%f322, %f318, %f321;
	sub.f32 	%f323, %f8, %f5;
	mul.f32 	%f324, %f323, %f314;
	sub.f32 	%f325, %f322, %f324;
	mul.f32 	%f326, %f323, %f317;
	mul.f32 	%f327, %f315, %f321;
	sub.f32 	%f328, %f326, %f327;
	mul.f32 	%f329, %f325, %f325;
	fma.rn.f32 	%f330, %f320, %f320, %f329;
	fma.rn.f32 	%f331, %f328, %f328, %f330;
	sqrt.rn.f32 	%f332, %f331;
	rcp.rn.f32 	%f333, %f332;
	mul.f32 	%f15, %f320, %f333;
	mul.f32 	%f16, %f325, %f333;
	mul.f32 	%f842, %f328, %f333;
	@%p34 bra 	BB2_19;

	mov.u32 	%r488, 0;
	// inline asm
	call (%f334), _optix_get_ray_time, ();
	// inline asm

BB2_21:
	.pragma "nounroll";
	// inline asm
	call (%rd170), _optix_get_transform_list_handle, (%r488);
	// inline asm
	// inline asm
	call (%r180), _optix_get_transform_type_from_handle, (%rd170);
	// inline asm
	and.b32  	%r181, %r180, -2;
	setp.eq.s32	%p14, %r181, 2;
	@%p14 bra 	BB2_27;
	bra.uni 	BB2_22;

BB2_27:
	setp.eq.s32	%p17, %r180, 2;
	@%p17 bra 	BB2_31;
	bra.uni 	BB2_28;

BB2_31:
	// inline asm
	call (%rd244), _optix_get_matrix_motion_transform_from_handle, (%rd170);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd246, %rd244;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r269,%r270,%r271,%r272}, [%rd246];
	// inline asm
	mov.b32	{%rs8, %rs9}, %r271;
	add.s64 	%rd250, %rd244, 16;
	// inline asm
	cvta.to.global.u64 %rd249, %rd250;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r273,%r274,%r275,%r276}, [%rd249];
	// inline asm
	add.s64 	%rd253, %rd244, 32;
	// inline asm
	cvta.to.global.u64 %rd252, %rd253;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r277,%r278,%r279,%r280}, [%rd252];
	// inline asm
	add.s64 	%rd256, %rd244, 48;
	// inline asm
	cvta.to.global.u64 %rd255, %rd256;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r281,%r282,%r283,%r284}, [%rd255];
	// inline asm
	add.s64 	%rd259, %rd244, 64;
	// inline asm
	cvta.to.global.u64 %rd258, %rd259;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r285,%r286,%r287,%r288}, [%rd258];
	// inline asm
	add.s64 	%rd262, %rd244, 80;
	// inline asm
	cvta.to.global.u64 %rd261, %rd262;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r289,%r290,%r291,%r292}, [%rd261];
	// inline asm
	add.s64 	%rd265, %rd244, 96;
	// inline asm
	cvta.to.global.u64 %rd264, %rd265;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r293,%r294,%r295,%r296}, [%rd264];
	// inline asm
	add.s64 	%rd268, %rd244, 112;
	// inline asm
	cvta.to.global.u64 %rd267, %rd268;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r297,%r298,%r299,%r300}, [%rd267];
	// inline asm
	mov.b32 	 %f437, %r272;
	mov.b32 	 %f438, %r273;
	cvt.u32.u16	%r313, %rs8;
	add.s32 	%r314, %r313, -1;
	cvt.rn.f32.s32	%f439, %r314;
	sub.f32 	%f440, %f334, %f437;
	mul.f32 	%f441, %f440, %f439;
	sub.f32 	%f442, %f438, %f437;
	div.rn.f32 	%f443, %f441, %f442;
	min.f32 	%f444, %f439, %f443;
	mov.f32 	%f445, 0f00000000;
	max.f32 	%f446, %f445, %f444;
	cvt.rmi.f32.f32	%f447, %f446;
	cvt.rzi.s32.f32	%r315, %f447;
	mul.wide.s32 	%rd279, %r315, 48;
	add.s64 	%rd271, %rd253, %rd279;
	// inline asm
	cvta.to.global.u64 %rd270, %rd271;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd270];
	// inline asm
	mov.b32 	 %f767, %r301;
	mov.b32 	 %f768, %r302;
	mov.b32 	 %f769, %r303;
	add.s64 	%rd274, %rd271, 16;
	// inline asm
	cvta.to.global.u64 %rd273, %rd274;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd273];
	// inline asm
	mov.b32 	 %f764, %r305;
	mov.b32 	 %f765, %r306;
	mov.b32 	 %f766, %r307;
	add.s64 	%rd277, %rd271, 32;
	// inline asm
	cvta.to.global.u64 %rd276, %rd277;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r309,%r310,%r311,%r312}, [%rd276];
	// inline asm
	sub.f32 	%f83, %f446, %f447;
	mov.b32 	 %f761, %r309;
	mov.b32 	 %f762, %r310;
	mov.b32 	 %f763, %r311;
	setp.leu.f32	%p19, %f83, 0f00000000;
	@%p19 bra 	BB2_33;

	cvt.rmi.f32.f32	%f741, %f446;
	cvt.rzi.s32.f32	%r483, %f741;
	cvt.s64.s32	%rd421, %r483;
	mul.lo.s64 	%rd289, %rd421, 48;
	add.s64 	%rd290, %rd244, %rd289;
	add.s64 	%rd281, %rd290, 80;
	// inline asm
	cvta.to.global.u64 %rd280, %rd281;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r316,%r317,%r318,%r319}, [%rd280];
	// inline asm
	mov.b32 	 %f448, %r316;
	mov.b32 	 %f449, %r317;
	mov.b32 	 %f450, %r318;
	add.s64 	%rd284, %rd290, 96;
	// inline asm
	cvta.to.global.u64 %rd283, %rd284;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r320,%r321,%r322,%r323}, [%rd283];
	// inline asm
	mov.b32 	 %f451, %r320;
	mov.b32 	 %f452, %r321;
	mov.b32 	 %f453, %r322;
	add.s64 	%rd287, %rd290, 112;
	// inline asm
	cvta.to.global.u64 %rd286, %rd287;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r324,%r325,%r326,%r327}, [%rd286];
	// inline asm
	mov.f32 	%f454, 0f3F800000;
	sub.f32 	%f455, %f454, %f83;
	mul.f32 	%f456, %f83, %f448;
	mul.f32 	%f457, %f83, %f449;
	mul.f32 	%f458, %f83, %f450;
	fma.rn.f32 	%f767, %f455, %f767, %f456;
	fma.rn.f32 	%f768, %f455, %f768, %f457;
	fma.rn.f32 	%f769, %f455, %f769, %f458;
	mul.f32 	%f459, %f83, %f451;
	mul.f32 	%f460, %f83, %f452;
	mul.f32 	%f461, %f83, %f453;
	fma.rn.f32 	%f764, %f455, %f764, %f459;
	fma.rn.f32 	%f765, %f455, %f765, %f460;
	fma.rn.f32 	%f766, %f455, %f766, %f461;
	mov.b32 	 %f462, %r324;
	mov.b32 	 %f463, %r325;
	mov.b32 	 %f464, %r326;
	mul.f32 	%f465, %f83, %f462;
	mul.f32 	%f466, %f83, %f463;
	mul.f32 	%f467, %f83, %f464;
	fma.rn.f32 	%f761, %f455, %f761, %f465;
	fma.rn.f32 	%f762, %f455, %f762, %f466;
	fma.rn.f32 	%f763, %f455, %f763, %f467;
	bra.uni 	BB2_33;

BB2_22:
	mov.f32 	%f770, 0f00000000;
	mov.f32 	%f772, 0f3F800000;
	setp.eq.s32	%p15, %r180, 4;
	@%p15 bra 	BB2_25;
	bra.uni 	BB2_23;

BB2_25:
	// inline asm
	call (%rd423), _optix_get_instance_inverse_transform_from_handle, (%rd170);
	// inline asm
	bra.uni 	BB2_26;

BB2_28:
	// inline asm
	call (%rd185), _optix_get_srt_motion_transform_from_handle, (%rd170);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd187, %rd185;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r194,%r195,%r196,%r197}, [%rd187];
	// inline asm
	mov.b32	{%rs6, %rs7}, %r196;
	add.s64 	%rd191, %rd185, 16;
	// inline asm
	cvta.to.global.u64 %rd190, %rd191;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r198,%r199,%r200,%r201}, [%rd190];
	// inline asm
	add.s64 	%rd194, %rd185, 32;
	// inline asm
	cvta.to.global.u64 %rd193, %rd194;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r202,%r203,%r204,%r205}, [%rd193];
	// inline asm
	add.s64 	%rd197, %rd185, 48;
	// inline asm
	cvta.to.global.u64 %rd196, %rd197;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r206,%r207,%r208,%r209}, [%rd196];
	// inline asm
	add.s64 	%rd200, %rd185, 64;
	// inline asm
	cvta.to.global.u64 %rd199, %rd200;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r210,%r211,%r212,%r213}, [%rd199];
	// inline asm
	add.s64 	%rd203, %rd185, 80;
	// inline asm
	cvta.to.global.u64 %rd202, %rd203;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r214,%r215,%r216,%r217}, [%rd202];
	// inline asm
	add.s64 	%rd206, %rd185, 96;
	// inline asm
	cvta.to.global.u64 %rd205, %rd206;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r218,%r219,%r220,%r221}, [%rd205];
	// inline asm
	add.s64 	%rd209, %rd185, 112;
	// inline asm
	cvta.to.global.u64 %rd208, %rd209;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r222,%r223,%r224,%r225}, [%rd208];
	// inline asm
	add.s64 	%rd212, %rd185, 128;
	// inline asm
	cvta.to.global.u64 %rd211, %rd212;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r226,%r227,%r228,%r229}, [%rd211];
	// inline asm
	add.s64 	%rd215, %rd185, 144;
	// inline asm
	cvta.to.global.u64 %rd214, %rd215;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r230,%r231,%r232,%r233}, [%rd214];
	// inline asm
	mov.b32 	 %f345, %r197;
	mov.b32 	 %f346, %r198;
	cvt.u32.u16	%r250, %rs6;
	add.s32 	%r251, %r250, -1;
	cvt.rn.f32.s32	%f347, %r251;
	sub.f32 	%f348, %f334, %f345;
	mul.f32 	%f349, %f348, %f347;
	sub.f32 	%f350, %f346, %f345;
	div.rn.f32 	%f351, %f349, %f350;
	min.f32 	%f352, %f347, %f351;
	mov.f32 	%f353, 0f00000000;
	max.f32 	%f354, %f353, %f352;
	cvt.rmi.f32.f32	%f355, %f354;
	cvt.rzi.s32.f32	%r252, %f355;
	mul.wide.s32 	%rd229, %r252, 64;
	add.s64 	%rd218, %rd194, %rd229;
	// inline asm
	cvta.to.global.u64 %rd217, %rd218;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r234,%r235,%r236,%r237}, [%rd217];
	// inline asm
	mov.b32 	 %f751, %r234;
	mov.b32 	 %f752, %r235;
	mov.b32 	 %f753, %r236;
	add.s64 	%rd221, %rd218, 16;
	// inline asm
	cvta.to.global.u64 %rd220, %rd221;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd220];
	// inline asm
	mov.b32 	 %f754, %r238;
	mov.b32 	 %f755, %r239;
	mov.b32 	 %f756, %r241;
	add.s64 	%rd224, %rd218, 32;
	// inline asm
	cvta.to.global.u64 %rd223, %rd224;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd223];
	// inline asm
	sub.f32 	%f43, %f354, %f355;
	mov.b32 	 %f757, %r243;
	mov.b32 	 %f758, %r244;
	mov.b32 	 %f759, %r245;
	add.s64 	%rd227, %rd218, 48;
	// inline asm
	cvta.to.global.u64 %rd226, %rd227;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd226];
	// inline asm
	mov.b32 	 %f760, %r246;
	setp.leu.f32	%p18, %f43, 0f00000000;
	@%p18 bra 	BB2_30;

	cvt.rmi.f32.f32	%f740, %f354;
	cvt.rzi.s32.f32	%r482, %f740;
	cvt.s64.s32	%rd420, %r482;
	shl.b64 	%rd242, %rd420, 6;
	add.s64 	%rd243, %rd242, %rd185;
	add.s64 	%rd231, %rd243, 96;
	// inline asm
	cvta.to.global.u64 %rd230, %rd231;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r253,%r254,%r255,%r256}, [%rd230];
	// inline asm
	mov.b32 	 %f356, %r253;
	mov.b32 	 %f357, %r254;
	mov.b32 	 %f358, %r255;
	add.s64 	%rd234, %rd243, 112;
	// inline asm
	cvta.to.global.u64 %rd233, %rd234;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r257,%r258,%r259,%r260}, [%rd233];
	// inline asm
	mov.b32 	 %f359, %r257;
	mov.b32 	 %f360, %r258;
	mov.b32 	 %f361, %r260;
	add.s64 	%rd237, %rd243, 128;
	// inline asm
	cvta.to.global.u64 %rd236, %rd237;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r261,%r262,%r263,%r264}, [%rd236];
	// inline asm
	mov.b32 	 %f362, %r262;
	mov.b32 	 %f363, %r263;
	mov.b32 	 %f364, %r264;
	add.s64 	%rd240, %rd243, 144;
	// inline asm
	cvta.to.global.u64 %rd239, %rd240;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r265,%r266,%r267,%r268}, [%rd239];
	// inline asm
	mov.f32 	%f365, 0f3F800000;
	sub.f32 	%f366, %f365, %f43;
	mul.f32 	%f367, %f43, %f356;
	mul.f32 	%f368, %f43, %f357;
	mul.f32 	%f369, %f43, %f358;
	fma.rn.f32 	%f751, %f366, %f751, %f367;
	fma.rn.f32 	%f752, %f366, %f752, %f368;
	fma.rn.f32 	%f753, %f366, %f753, %f369;
	mul.f32 	%f370, %f43, %f359;
	mul.f32 	%f371, %f43, %f360;
	mul.f32 	%f372, %f43, %f361;
	fma.rn.f32 	%f754, %f366, %f754, %f370;
	fma.rn.f32 	%f755, %f366, %f755, %f371;
	fma.rn.f32 	%f756, %f366, %f756, %f372;
	mul.f32 	%f373, %f43, %f362;
	mul.f32 	%f374, %f43, %f363;
	mul.f32 	%f375, %f43, %f364;
	fma.rn.f32 	%f376, %f366, %f757, %f373;
	fma.rn.f32 	%f377, %f366, %f758, %f374;
	fma.rn.f32 	%f378, %f366, %f759, %f375;
	mov.b32 	 %f379, %r265;
	mul.f32 	%f380, %f43, %f379;
	fma.rn.f32 	%f381, %f366, %f760, %f380;
	mul.f32 	%f382, %f377, %f377;
	fma.rn.f32 	%f383, %f376, %f376, %f382;
	fma.rn.f32 	%f384, %f378, %f378, %f383;
	fma.rn.f32 	%f385, %f381, %f381, %f384;
	sqrt.rn.f32 	%f386, %f385;
	rcp.rn.f32 	%f387, %f386;
	mul.f32 	%f757, %f376, %f387;
	mul.f32 	%f758, %f377, %f387;
	mul.f32 	%f759, %f378, %f387;
	mul.f32 	%f760, %f381, %f387;

BB2_30:
	mul.f32 	%f388, %f758, %f758;
	fma.rn.f32 	%f389, %f757, %f757, %f388;
	fma.rn.f32 	%f390, %f759, %f759, %f389;
	fma.rn.f32 	%f391, %f760, %f760, %f390;
	rcp.rn.f32 	%f392, %f391;
	mul.f32 	%f393, %f757, %f392;
	mul.f32 	%f394, %f758, %f392;
	mul.f32 	%f395, %f759, %f392;
	mul.f32 	%f396, %f760, %f392;
	mul.f32 	%f397, %f757, %f393;
	mul.f32 	%f398, %f758, %f394;
	mul.f32 	%f399, %f759, %f395;
	mul.f32 	%f400, %f757, %f394;
	mul.f32 	%f401, %f759, %f396;
	mul.f32 	%f402, %f757, %f395;
	mul.f32 	%f403, %f758, %f396;
	mul.f32 	%f404, %f758, %f395;
	mul.f32 	%f405, %f757, %f396;
	sub.f32 	%f406, %f397, %f398;
	sub.f32 	%f407, %f406, %f399;
	fma.rn.f32 	%f408, %f760, %f396, %f407;
	sub.f32 	%f409, %f400, %f401;
	add.f32 	%f410, %f409, %f409;
	add.f32 	%f411, %f402, %f403;
	add.f32 	%f412, %f411, %f411;
	add.f32 	%f413, %f400, %f401;
	add.f32 	%f414, %f413, %f413;
	sub.f32 	%f415, %f398, %f397;
	sub.f32 	%f416, %f415, %f399;
	fma.rn.f32 	%f417, %f760, %f396, %f416;
	sub.f32 	%f418, %f404, %f405;
	add.f32 	%f419, %f418, %f418;
	sub.f32 	%f420, %f402, %f403;
	add.f32 	%f421, %f420, %f420;
	add.f32 	%f422, %f404, %f405;
	add.f32 	%f423, %f422, %f422;
	neg.f32 	%f424, %f397;
	sub.f32 	%f425, %f424, %f398;
	add.f32 	%f426, %f399, %f425;
	fma.rn.f32 	%f427, %f760, %f396, %f426;
	mul.f32 	%f428, %f753, %f408;
	fma.rn.f32 	%f429, %f755, %f410, %f428;
	fma.rn.f32 	%f769, %f756, %f412, %f429;
	mul.f32 	%f430, %f755, %f417;
	fma.rn.f32 	%f431, %f753, %f414, %f430;
	fma.rn.f32 	%f766, %f756, %f419, %f431;
	mul.f32 	%f432, %f755, %f423;
	fma.rn.f32 	%f433, %f753, %f421, %f432;
	fma.rn.f32 	%f763, %f756, %f427, %f433;
	mul.f32 	%f434, %f752, %f408;
	fma.rn.f32 	%f768, %f754, %f410, %f434;
	mul.f32 	%f435, %f754, %f417;
	fma.rn.f32 	%f765, %f752, %f414, %f435;
	mul.f32 	%f436, %f754, %f423;
	fma.rn.f32 	%f762, %f752, %f421, %f436;
	mul.f32 	%f767, %f751, %f408;
	mul.f32 	%f764, %f751, %f414;
	mul.f32 	%f761, %f751, %f421;

BB2_33:
	mul.f32 	%f468, %f762, %f766;
	mul.f32 	%f469, %f763, %f765;
	sub.f32 	%f470, %f469, %f468;
	mul.f32 	%f471, %f767, %f470;
	mul.f32 	%f472, %f761, %f766;
	mul.f32 	%f473, %f763, %f764;
	sub.f32 	%f474, %f473, %f472;
	mul.f32 	%f475, %f474, %f768;
	sub.f32 	%f476, %f471, %f475;
	mul.f32 	%f477, %f761, %f765;
	mul.f32 	%f478, %f762, %f764;
	sub.f32 	%f479, %f478, %f477;
	fma.rn.f32 	%f480, %f479, %f769, %f476;
	rcp.rn.f32 	%f481, %f480;
	mul.f32 	%f776, %f470, %f481;
	mul.f32 	%f482, %f763, %f768;
	mul.f32 	%f483, %f762, %f769;
	sub.f32 	%f484, %f483, %f482;
	mul.f32 	%f777, %f481, %f484;
	mul.f32 	%f485, %f765, %f769;
	mul.f32 	%f486, %f766, %f768;
	sub.f32 	%f487, %f486, %f485;
	mul.f32 	%f778, %f481, %f487;
	sub.f32 	%f488, %f472, %f473;
	mul.f32 	%f773, %f488, %f481;
	mul.f32 	%f489, %f761, %f769;
	mul.f32 	%f490, %f763, %f767;
	sub.f32 	%f491, %f490, %f489;
	mul.f32 	%f774, %f481, %f491;
	mul.f32 	%f492, %f766, %f767;
	mul.f32 	%f493, %f764, %f769;
	sub.f32 	%f494, %f493, %f492;
	mul.f32 	%f775, %f481, %f494;
	mul.f32 	%f770, %f479, %f481;
	mul.f32 	%f495, %f762, %f767;
	mul.f32 	%f496, %f761, %f768;
	sub.f32 	%f497, %f496, %f495;
	mul.f32 	%f771, %f497, %f481;
	mul.f32 	%f498, %f764, %f768;
	mul.f32 	%f499, %f765, %f767;
	sub.f32 	%f500, %f499, %f498;
	mul.f32 	%f772, %f500, %f481;
	bra.uni 	BB2_34;

BB2_23:
	setp.ne.s32	%p16, %r180, 1;
	mov.f32 	%f771, %f770;
	mov.f32 	%f773, %f770;
	mov.f32 	%f774, %f772;
	mov.f32 	%f775, %f770;
	mov.f32 	%f776, %f772;
	mov.f32 	%f777, %f770;
	mov.f32 	%f778, %f770;
	@%p16 bra 	BB2_34;

	// inline asm
	call (%rd172), _optix_get_static_transform_from_handle, (%rd170);
	// inline asm
	add.s64 	%rd423, %rd172, 64;

BB2_26:
	// inline asm
	cvta.to.global.u64 %rd176, %rd423;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r182,%r183,%r184,%r185}, [%rd176];
	// inline asm
	mov.b32 	 %f776, %r182;
	mov.b32 	 %f777, %r183;
	mov.b32 	 %f778, %r184;
	add.s64 	%rd180, %rd423, 16;
	// inline asm
	cvta.to.global.u64 %rd179, %rd180;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r186,%r187,%r188,%r189}, [%rd179];
	// inline asm
	mov.b32 	 %f773, %r186;
	mov.b32 	 %f774, %r187;
	mov.b32 	 %f775, %r188;
	add.s64 	%rd183, %rd423, 32;
	// inline asm
	cvta.to.global.u64 %rd182, %rd183;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r190,%r191,%r192,%r193}, [%rd182];
	// inline asm
	mov.b32 	 %f770, %r190;
	mov.b32 	 %f771, %r191;
	mov.b32 	 %f772, %r192;

BB2_34:
	setp.eq.s32	%p20, %r488, 0;
	@%p20 bra 	BB2_35;
	bra.uni 	BB2_36;

BB2_35:
	mov.f32 	%f750, %f770;
	mov.f32 	%f749, %f771;
	mov.f32 	%f748, %f772;
	mov.f32 	%f747, %f773;
	mov.f32 	%f746, %f774;
	mov.f32 	%f745, %f775;
	mov.f32 	%f744, %f776;
	mov.f32 	%f743, %f777;
	mov.f32 	%f742, %f778;
	bra.uni 	BB2_37;

BB2_36:
	mul.f32 	%f501, %f747, %f777;
	fma.rn.f32 	%f502, %f744, %f776, %f501;
	fma.rn.f32 	%f123, %f750, %f778, %f502;
	mul.f32 	%f503, %f746, %f777;
	fma.rn.f32 	%f504, %f743, %f776, %f503;
	fma.rn.f32 	%f124, %f749, %f778, %f504;
	mul.f32 	%f505, %f745, %f777;
	fma.rn.f32 	%f506, %f742, %f776, %f505;
	fma.rn.f32 	%f125, %f748, %f778, %f506;
	mul.f32 	%f507, %f747, %f774;
	fma.rn.f32 	%f508, %f744, %f773, %f507;
	fma.rn.f32 	%f126, %f750, %f775, %f508;
	mul.f32 	%f509, %f746, %f774;
	fma.rn.f32 	%f510, %f743, %f773, %f509;
	fma.rn.f32 	%f127, %f749, %f775, %f510;
	mul.f32 	%f511, %f745, %f774;
	fma.rn.f32 	%f512, %f742, %f773, %f511;
	fma.rn.f32 	%f128, %f748, %f775, %f512;
	mul.f32 	%f513, %f747, %f771;
	fma.rn.f32 	%f514, %f744, %f770, %f513;
	fma.rn.f32 	%f750, %f750, %f772, %f514;
	mul.f32 	%f515, %f746, %f771;
	fma.rn.f32 	%f516, %f743, %f770, %f515;
	fma.rn.f32 	%f749, %f749, %f772, %f516;
	mul.f32 	%f517, %f745, %f771;
	fma.rn.f32 	%f518, %f742, %f770, %f517;
	fma.rn.f32 	%f748, %f748, %f772, %f518;
	mov.f32 	%f747, %f126;
	mov.f32 	%f746, %f127;
	mov.f32 	%f745, %f128;
	mov.f32 	%f744, %f123;
	mov.f32 	%f743, %f124;
	mov.f32 	%f742, %f125;

BB2_37:
	add.s32 	%r488, %r488, 1;
	setp.lt.u32	%p21, %r488, %r28;
	@%p21 bra 	BB2_21;

	mul.f32 	%f519, %f15, %f744;
	fma.rn.f32 	%f520, %f16, %f747, %f519;
	fma.rn.f32 	%f840, %f842, %f750, %f520;
	mul.f32 	%f521, %f15, %f743;
	fma.rn.f32 	%f522, %f16, %f746, %f521;
	fma.rn.f32 	%f841, %f842, %f749, %f522;
	mul.f32 	%f523, %f15, %f742;
	fma.rn.f32 	%f524, %f16, %f745, %f523;
	fma.rn.f32 	%f842, %f842, %f748, %f524;
	bra.uni 	BB2_39;

BB2_19:
	mov.f32 	%f840, %f15;
	mov.f32 	%f841, %f16;

BB2_39:
	ld.u64 	%rd22, [%rd31+40];
	setp.eq.s64	%p22, %rd22, 0;
	@%p22 bra 	BB2_62;

	setp.eq.s32	%p33, %r28, 0;
	ld.u16 	%rd291, [%rd31+52];
	setp.eq.s64	%p24, %rd291, 0;
	selp.b64	%rd292, 12, %rd291, %p24;
	mul.lo.s64 	%rd293, %rd292, %rd3;
	add.s64 	%rd294, %rd293, %rd22;
	ld.f32 	%f525, [%rd294];
	ld.f32 	%f526, [%rd294+4];
	ld.f32 	%f527, [%rd294+8];
	mul.lo.s64 	%rd295, %rd292, %rd4;
	add.s64 	%rd296, %rd295, %rd22;
	ld.f32 	%f528, [%rd296];
	ld.f32 	%f529, [%rd296+4];
	ld.f32 	%f530, [%rd296+8];
	mul.lo.s64 	%rd297, %rd292, %rd5;
	add.s64 	%rd298, %rd297, %rd22;
	ld.f32 	%f531, [%rd298];
	ld.f32 	%f532, [%rd298+4];
	ld.f32 	%f533, [%rd298+8];
	mov.f32 	%f534, 0f3F800000;
	sub.f32 	%f535, %f534, %f287;
	sub.f32 	%f536, %f535, %f288;
	mul.f32 	%f537, %f287, %f528;
	mul.f32 	%f538, %f287, %f529;
	mul.f32 	%f539, %f287, %f530;
	fma.rn.f32 	%f540, %f536, %f525, %f537;
	fma.rn.f32 	%f541, %f536, %f526, %f538;
	fma.rn.f32 	%f542, %f536, %f527, %f539;
	fma.rn.f32 	%f147, %f288, %f531, %f540;
	fma.rn.f32 	%f148, %f288, %f532, %f541;
	fma.rn.f32 	%f839, %f288, %f533, %f542;
	@%p33 bra 	BB2_41;

	mov.u32 	%r489, 0;
	// inline asm
	call (%f543), _optix_get_ray_time, ();
	// inline asm

BB2_43:
	.pragma "nounroll";
	// inline asm
	call (%rd299), _optix_get_transform_list_handle, (%r489);
	// inline asm
	// inline asm
	call (%r330), _optix_get_transform_type_from_handle, (%rd299);
	// inline asm
	and.b32  	%r331, %r330, -2;
	setp.eq.s32	%p25, %r331, 2;
	@%p25 bra 	BB2_49;
	bra.uni 	BB2_44;

BB2_49:
	setp.eq.s32	%p28, %r330, 2;
	@%p28 bra 	BB2_53;
	bra.uni 	BB2_50;

BB2_53:
	// inline asm
	call (%rd373), _optix_get_matrix_motion_transform_from_handle, (%rd299);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd375, %rd373;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r419,%r420,%r421,%r422}, [%rd375];
	// inline asm
	mov.b32	{%rs12, %rs13}, %r421;
	add.s64 	%rd379, %rd373, 16;
	// inline asm
	cvta.to.global.u64 %rd378, %rd379;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r423,%r424,%r425,%r426}, [%rd378];
	// inline asm
	add.s64 	%rd382, %rd373, 32;
	// inline asm
	cvta.to.global.u64 %rd381, %rd382;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r427,%r428,%r429,%r430}, [%rd381];
	// inline asm
	add.s64 	%rd385, %rd373, 48;
	// inline asm
	cvta.to.global.u64 %rd384, %rd385;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r431,%r432,%r433,%r434}, [%rd384];
	// inline asm
	add.s64 	%rd388, %rd373, 64;
	// inline asm
	cvta.to.global.u64 %rd387, %rd388;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r435,%r436,%r437,%r438}, [%rd387];
	// inline asm
	add.s64 	%rd391, %rd373, 80;
	// inline asm
	cvta.to.global.u64 %rd390, %rd391;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r439,%r440,%r441,%r442}, [%rd390];
	// inline asm
	add.s64 	%rd394, %rd373, 96;
	// inline asm
	cvta.to.global.u64 %rd393, %rd394;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r443,%r444,%r445,%r446}, [%rd393];
	// inline asm
	add.s64 	%rd397, %rd373, 112;
	// inline asm
	cvta.to.global.u64 %rd396, %rd397;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r447,%r448,%r449,%r450}, [%rd396];
	// inline asm
	mov.b32 	 %f646, %r422;
	mov.b32 	 %f647, %r423;
	cvt.u32.u16	%r463, %rs12;
	add.s32 	%r464, %r463, -1;
	cvt.rn.f32.s32	%f648, %r464;
	sub.f32 	%f649, %f543, %f646;
	mul.f32 	%f650, %f649, %f648;
	sub.f32 	%f651, %f647, %f646;
	div.rn.f32 	%f652, %f650, %f651;
	min.f32 	%f653, %f648, %f652;
	mov.f32 	%f654, 0f00000000;
	max.f32 	%f655, %f654, %f653;
	cvt.rmi.f32.f32	%f656, %f655;
	cvt.rzi.s32.f32	%r465, %f656;
	cvt.s64.s32	%rd30, %r465;
	mul.wide.s32 	%rd408, %r465, 48;
	add.s64 	%rd400, %rd382, %rd408;
	// inline asm
	cvta.to.global.u64 %rd399, %rd400;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r451,%r452,%r453,%r454}, [%rd399];
	// inline asm
	mov.b32 	 %f816, %r451;
	mov.b32 	 %f817, %r452;
	mov.b32 	 %f818, %r453;
	add.s64 	%rd403, %rd400, 16;
	// inline asm
	cvta.to.global.u64 %rd402, %rd403;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r455,%r456,%r457,%r458}, [%rd402];
	// inline asm
	mov.b32 	 %f813, %r455;
	mov.b32 	 %f814, %r456;
	mov.b32 	 %f815, %r457;
	add.s64 	%rd406, %rd400, 32;
	// inline asm
	cvta.to.global.u64 %rd405, %rd406;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r459,%r460,%r461,%r462}, [%rd405];
	// inline asm
	sub.f32 	%f215, %f655, %f656;
	mov.b32 	 %f810, %r459;
	mov.b32 	 %f811, %r460;
	mov.b32 	 %f812, %r461;
	setp.leu.f32	%p30, %f215, 0f00000000;
	@%p30 bra 	BB2_55;

	mul.lo.s64 	%rd418, %rd30, 48;
	add.s64 	%rd419, %rd373, %rd418;
	add.s64 	%rd410, %rd419, 80;
	// inline asm
	cvta.to.global.u64 %rd409, %rd410;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r466,%r467,%r468,%r469}, [%rd409];
	// inline asm
	mov.b32 	 %f657, %r466;
	mov.b32 	 %f658, %r467;
	mov.b32 	 %f659, %r468;
	add.s64 	%rd413, %rd419, 96;
	// inline asm
	cvta.to.global.u64 %rd412, %rd413;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r470,%r471,%r472,%r473}, [%rd412];
	// inline asm
	mov.b32 	 %f660, %r470;
	mov.b32 	 %f661, %r471;
	mov.b32 	 %f662, %r472;
	add.s64 	%rd416, %rd419, 112;
	// inline asm
	cvta.to.global.u64 %rd415, %rd416;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r474,%r475,%r476,%r477}, [%rd415];
	// inline asm
	mov.f32 	%f663, 0f3F800000;
	sub.f32 	%f664, %f663, %f215;
	mul.f32 	%f665, %f215, %f657;
	mul.f32 	%f666, %f215, %f658;
	mul.f32 	%f667, %f215, %f659;
	fma.rn.f32 	%f816, %f664, %f816, %f665;
	fma.rn.f32 	%f817, %f664, %f817, %f666;
	fma.rn.f32 	%f818, %f664, %f818, %f667;
	mul.f32 	%f668, %f215, %f660;
	mul.f32 	%f669, %f215, %f661;
	mul.f32 	%f670, %f215, %f662;
	fma.rn.f32 	%f813, %f664, %f813, %f668;
	fma.rn.f32 	%f814, %f664, %f814, %f669;
	fma.rn.f32 	%f815, %f664, %f815, %f670;
	mov.b32 	 %f671, %r474;
	mov.b32 	 %f672, %r475;
	mov.b32 	 %f673, %r476;
	mul.f32 	%f674, %f215, %f671;
	mul.f32 	%f675, %f215, %f672;
	mul.f32 	%f676, %f215, %f673;
	fma.rn.f32 	%f810, %f664, %f810, %f674;
	fma.rn.f32 	%f811, %f664, %f811, %f675;
	fma.rn.f32 	%f812, %f664, %f812, %f676;
	bra.uni 	BB2_55;

BB2_44:
	mov.f32 	%f819, 0f00000000;
	setp.eq.s32	%p26, %r330, 4;
	@%p26 bra 	BB2_47;
	bra.uni 	BB2_45;

BB2_47:
	// inline asm
	call (%rd424), _optix_get_instance_inverse_transform_from_handle, (%rd299);
	// inline asm
	bra.uni 	BB2_48;

BB2_50:
	// inline asm
	call (%rd314), _optix_get_srt_motion_transform_from_handle, (%rd299);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd316, %rd314;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r344,%r345,%r346,%r347}, [%rd316];
	// inline asm
	mov.b32	{%rs10, %rs11}, %r346;
	add.s64 	%rd320, %rd314, 16;
	// inline asm
	cvta.to.global.u64 %rd319, %rd320;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r348,%r349,%r350,%r351}, [%rd319];
	// inline asm
	add.s64 	%rd323, %rd314, 32;
	// inline asm
	cvta.to.global.u64 %rd322, %rd323;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r352,%r353,%r354,%r355}, [%rd322];
	// inline asm
	add.s64 	%rd326, %rd314, 48;
	// inline asm
	cvta.to.global.u64 %rd325, %rd326;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r356,%r357,%r358,%r359}, [%rd325];
	// inline asm
	add.s64 	%rd329, %rd314, 64;
	// inline asm
	cvta.to.global.u64 %rd328, %rd329;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r360,%r361,%r362,%r363}, [%rd328];
	// inline asm
	add.s64 	%rd332, %rd314, 80;
	// inline asm
	cvta.to.global.u64 %rd331, %rd332;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r364,%r365,%r366,%r367}, [%rd331];
	// inline asm
	add.s64 	%rd335, %rd314, 96;
	// inline asm
	cvta.to.global.u64 %rd334, %rd335;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r368,%r369,%r370,%r371}, [%rd334];
	// inline asm
	add.s64 	%rd338, %rd314, 112;
	// inline asm
	cvta.to.global.u64 %rd337, %rd338;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r372,%r373,%r374,%r375}, [%rd337];
	// inline asm
	add.s64 	%rd341, %rd314, 128;
	// inline asm
	cvta.to.global.u64 %rd340, %rd341;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r376,%r377,%r378,%r379}, [%rd340];
	// inline asm
	add.s64 	%rd344, %rd314, 144;
	// inline asm
	cvta.to.global.u64 %rd343, %rd344;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r380,%r381,%r382,%r383}, [%rd343];
	// inline asm
	mov.b32 	 %f554, %r347;
	mov.b32 	 %f555, %r348;
	cvt.u32.u16	%r400, %rs10;
	add.s32 	%r401, %r400, -1;
	cvt.rn.f32.s32	%f556, %r401;
	sub.f32 	%f557, %f543, %f554;
	mul.f32 	%f558, %f557, %f556;
	sub.f32 	%f559, %f555, %f554;
	div.rn.f32 	%f560, %f558, %f559;
	min.f32 	%f561, %f556, %f560;
	mov.f32 	%f562, 0f00000000;
	max.f32 	%f563, %f562, %f561;
	cvt.rmi.f32.f32	%f564, %f563;
	cvt.rzi.s32.f32	%r402, %f564;
	cvt.s64.s32	%rd28, %r402;
	mul.wide.s32 	%rd358, %r402, 64;
	add.s64 	%rd347, %rd323, %rd358;
	// inline asm
	cvta.to.global.u64 %rd346, %rd347;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r384,%r385,%r386,%r387}, [%rd346];
	// inline asm
	mov.b32 	 %f800, %r384;
	mov.b32 	 %f801, %r385;
	mov.b32 	 %f802, %r386;
	add.s64 	%rd350, %rd347, 16;
	// inline asm
	cvta.to.global.u64 %rd349, %rd350;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r388,%r389,%r390,%r391}, [%rd349];
	// inline asm
	mov.b32 	 %f803, %r388;
	mov.b32 	 %f804, %r389;
	mov.b32 	 %f805, %r391;
	add.s64 	%rd353, %rd347, 32;
	// inline asm
	cvta.to.global.u64 %rd352, %rd353;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r392,%r393,%r394,%r395}, [%rd352];
	// inline asm
	sub.f32 	%f175, %f563, %f564;
	mov.b32 	 %f806, %r393;
	mov.b32 	 %f807, %r394;
	mov.b32 	 %f808, %r395;
	add.s64 	%rd356, %rd347, 48;
	// inline asm
	cvta.to.global.u64 %rd355, %rd356;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r396,%r397,%r398,%r399}, [%rd355];
	// inline asm
	mov.b32 	 %f809, %r396;
	setp.leu.f32	%p29, %f175, 0f00000000;
	@%p29 bra 	BB2_52;

	shl.b64 	%rd371, %rd28, 6;
	add.s64 	%rd372, %rd371, %rd314;
	add.s64 	%rd360, %rd372, 96;
	// inline asm
	cvta.to.global.u64 %rd359, %rd360;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r403,%r404,%r405,%r406}, [%rd359];
	// inline asm
	mov.b32 	 %f565, %r403;
	mov.b32 	 %f566, %r404;
	mov.b32 	 %f567, %r405;
	add.s64 	%rd363, %rd372, 112;
	// inline asm
	cvta.to.global.u64 %rd362, %rd363;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r407,%r408,%r409,%r410}, [%rd362];
	// inline asm
	mov.b32 	 %f568, %r407;
	mov.b32 	 %f569, %r408;
	mov.b32 	 %f570, %r410;
	add.s64 	%rd366, %rd372, 128;
	// inline asm
	cvta.to.global.u64 %rd365, %rd366;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r411,%r412,%r413,%r414}, [%rd365];
	// inline asm
	mov.b32 	 %f571, %r412;
	mov.b32 	 %f572, %r413;
	mov.b32 	 %f573, %r414;
	add.s64 	%rd369, %rd372, 144;
	// inline asm
	cvta.to.global.u64 %rd368, %rd369;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r415,%r416,%r417,%r418}, [%rd368];
	// inline asm
	mov.f32 	%f574, 0f3F800000;
	sub.f32 	%f575, %f574, %f175;
	mul.f32 	%f576, %f175, %f565;
	mul.f32 	%f577, %f175, %f566;
	mul.f32 	%f578, %f175, %f567;
	fma.rn.f32 	%f800, %f575, %f800, %f576;
	fma.rn.f32 	%f801, %f575, %f801, %f577;
	fma.rn.f32 	%f802, %f575, %f802, %f578;
	mul.f32 	%f579, %f175, %f568;
	mul.f32 	%f580, %f175, %f569;
	mul.f32 	%f581, %f175, %f570;
	fma.rn.f32 	%f803, %f575, %f803, %f579;
	fma.rn.f32 	%f804, %f575, %f804, %f580;
	fma.rn.f32 	%f805, %f575, %f805, %f581;
	mul.f32 	%f582, %f175, %f571;
	mul.f32 	%f583, %f175, %f572;
	mul.f32 	%f584, %f175, %f573;
	fma.rn.f32 	%f585, %f575, %f806, %f582;
	fma.rn.f32 	%f586, %f575, %f807, %f583;
	fma.rn.f32 	%f587, %f575, %f808, %f584;
	mov.b32 	 %f588, %r415;
	mul.f32 	%f589, %f175, %f588;
	fma.rn.f32 	%f590, %f575, %f809, %f589;
	mul.f32 	%f591, %f586, %f586;
	fma.rn.f32 	%f592, %f585, %f585, %f591;
	fma.rn.f32 	%f593, %f587, %f587, %f592;
	fma.rn.f32 	%f594, %f590, %f590, %f593;
	sqrt.rn.f32 	%f595, %f594;
	rcp.rn.f32 	%f596, %f595;
	mul.f32 	%f806, %f585, %f596;
	mul.f32 	%f807, %f586, %f596;
	mul.f32 	%f808, %f587, %f596;
	mul.f32 	%f809, %f590, %f596;

BB2_52:
	mul.f32 	%f597, %f807, %f807;
	fma.rn.f32 	%f598, %f806, %f806, %f597;
	fma.rn.f32 	%f599, %f808, %f808, %f598;
	fma.rn.f32 	%f600, %f809, %f809, %f599;
	rcp.rn.f32 	%f601, %f600;
	mul.f32 	%f602, %f806, %f601;
	mul.f32 	%f603, %f807, %f601;
	mul.f32 	%f604, %f808, %f601;
	mul.f32 	%f605, %f809, %f601;
	mul.f32 	%f606, %f806, %f602;
	mul.f32 	%f607, %f807, %f603;
	mul.f32 	%f608, %f808, %f604;
	mul.f32 	%f609, %f806, %f603;
	mul.f32 	%f610, %f808, %f605;
	mul.f32 	%f611, %f806, %f604;
	mul.f32 	%f612, %f807, %f605;
	mul.f32 	%f613, %f807, %f604;
	mul.f32 	%f614, %f806, %f605;
	sub.f32 	%f615, %f606, %f607;
	sub.f32 	%f616, %f615, %f608;
	fma.rn.f32 	%f617, %f809, %f605, %f616;
	sub.f32 	%f618, %f609, %f610;
	add.f32 	%f619, %f618, %f618;
	add.f32 	%f620, %f611, %f612;
	add.f32 	%f621, %f620, %f620;
	add.f32 	%f622, %f609, %f610;
	add.f32 	%f623, %f622, %f622;
	sub.f32 	%f624, %f607, %f606;
	sub.f32 	%f625, %f624, %f608;
	fma.rn.f32 	%f626, %f809, %f605, %f625;
	sub.f32 	%f627, %f613, %f614;
	add.f32 	%f628, %f627, %f627;
	sub.f32 	%f629, %f611, %f612;
	add.f32 	%f630, %f629, %f629;
	add.f32 	%f631, %f613, %f614;
	add.f32 	%f632, %f631, %f631;
	neg.f32 	%f633, %f606;
	sub.f32 	%f634, %f633, %f607;
	add.f32 	%f635, %f608, %f634;
	fma.rn.f32 	%f636, %f809, %f605, %f635;
	mul.f32 	%f637, %f802, %f617;
	fma.rn.f32 	%f638, %f804, %f619, %f637;
	fma.rn.f32 	%f818, %f805, %f621, %f638;
	mul.f32 	%f639, %f804, %f626;
	fma.rn.f32 	%f640, %f802, %f623, %f639;
	fma.rn.f32 	%f815, %f805, %f628, %f640;
	mul.f32 	%f641, %f804, %f632;
	fma.rn.f32 	%f642, %f802, %f630, %f641;
	fma.rn.f32 	%f812, %f805, %f636, %f642;
	mul.f32 	%f643, %f801, %f617;
	fma.rn.f32 	%f817, %f803, %f619, %f643;
	mul.f32 	%f644, %f803, %f626;
	fma.rn.f32 	%f814, %f801, %f623, %f644;
	mul.f32 	%f645, %f803, %f632;
	fma.rn.f32 	%f811, %f801, %f630, %f645;
	mul.f32 	%f816, %f800, %f617;
	mul.f32 	%f813, %f800, %f623;
	mul.f32 	%f810, %f800, %f630;

BB2_55:
	mul.f32 	%f677, %f811, %f815;
	mul.f32 	%f678, %f812, %f814;
	sub.f32 	%f679, %f678, %f677;
	mul.f32 	%f680, %f816, %f679;
	mul.f32 	%f681, %f810, %f815;
	mul.f32 	%f682, %f812, %f813;
	sub.f32 	%f683, %f682, %f681;
	mul.f32 	%f684, %f683, %f817;
	sub.f32 	%f685, %f680, %f684;
	mul.f32 	%f686, %f810, %f814;
	mul.f32 	%f687, %f811, %f813;
	sub.f32 	%f688, %f687, %f686;
	fma.rn.f32 	%f689, %f688, %f818, %f685;
	rcp.rn.f32 	%f690, %f689;
	mul.f32 	%f825, %f679, %f690;
	mul.f32 	%f691, %f812, %f817;
	mul.f32 	%f692, %f811, %f818;
	sub.f32 	%f693, %f692, %f691;
	mul.f32 	%f826, %f690, %f693;
	mul.f32 	%f694, %f814, %f818;
	mul.f32 	%f695, %f815, %f817;
	sub.f32 	%f696, %f695, %f694;
	mul.f32 	%f827, %f690, %f696;
	sub.f32 	%f697, %f681, %f682;
	mul.f32 	%f822, %f697, %f690;
	mul.f32 	%f698, %f810, %f818;
	mul.f32 	%f699, %f812, %f816;
	sub.f32 	%f700, %f699, %f698;
	mul.f32 	%f823, %f690, %f700;
	mul.f32 	%f701, %f815, %f816;
	mul.f32 	%f702, %f813, %f818;
	sub.f32 	%f703, %f702, %f701;
	mul.f32 	%f824, %f690, %f703;
	mul.f32 	%f819, %f688, %f690;
	mul.f32 	%f704, %f811, %f816;
	mul.f32 	%f705, %f810, %f817;
	sub.f32 	%f706, %f705, %f704;
	mul.f32 	%f820, %f706, %f690;
	mul.f32 	%f707, %f813, %f817;
	mul.f32 	%f708, %f814, %f816;
	sub.f32 	%f709, %f708, %f707;
	mul.f32 	%f821, %f709, %f690;
	bra.uni 	BB2_56;

BB2_45:
	setp.ne.s32	%p27, %r330, 1;
	mov.f32 	%f820, %f819;
	mov.f32 	%f821, %f534;
	mov.f32 	%f822, %f819;
	mov.f32 	%f823, %f534;
	mov.f32 	%f824, %f819;
	mov.f32 	%f825, %f534;
	mov.f32 	%f826, %f819;
	mov.f32 	%f827, %f819;
	@%p27 bra 	BB2_56;

	// inline asm
	call (%rd301), _optix_get_static_transform_from_handle, (%rd299);
	// inline asm
	add.s64 	%rd424, %rd301, 64;

BB2_48:
	// inline asm
	cvta.to.global.u64 %rd305, %rd424;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r332,%r333,%r334,%r335}, [%rd305];
	// inline asm
	mov.b32 	 %f825, %r332;
	mov.b32 	 %f826, %r333;
	mov.b32 	 %f827, %r334;
	add.s64 	%rd309, %rd424, 16;
	// inline asm
	cvta.to.global.u64 %rd308, %rd309;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r336,%r337,%r338,%r339}, [%rd308];
	// inline asm
	mov.b32 	 %f822, %r336;
	mov.b32 	 %f823, %r337;
	mov.b32 	 %f824, %r338;
	add.s64 	%rd312, %rd424, 32;
	// inline asm
	cvta.to.global.u64 %rd311, %rd312;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r340,%r341,%r342,%r343}, [%rd311];
	// inline asm
	mov.b32 	 %f819, %r340;
	mov.b32 	 %f820, %r341;
	mov.b32 	 %f821, %r342;

BB2_56:
	setp.eq.s32	%p31, %r489, 0;
	@%p31 bra 	BB2_57;
	bra.uni 	BB2_58;

BB2_57:
	mov.f32 	%f799, %f819;
	mov.f32 	%f798, %f820;
	mov.f32 	%f797, %f821;
	mov.f32 	%f796, %f822;
	mov.f32 	%f795, %f823;
	mov.f32 	%f794, %f824;
	mov.f32 	%f793, %f825;
	mov.f32 	%f792, %f826;
	mov.f32 	%f791, %f827;
	bra.uni 	BB2_59;

BB2_58:
	mul.f32 	%f710, %f796, %f826;
	fma.rn.f32 	%f711, %f793, %f825, %f710;
	fma.rn.f32 	%f255, %f799, %f827, %f711;
	mul.f32 	%f712, %f795, %f826;
	fma.rn.f32 	%f713, %f792, %f825, %f712;
	fma.rn.f32 	%f256, %f798, %f827, %f713;
	mul.f32 	%f714, %f794, %f826;
	fma.rn.f32 	%f715, %f791, %f825, %f714;
	fma.rn.f32 	%f257, %f797, %f827, %f715;
	mul.f32 	%f716, %f796, %f823;
	fma.rn.f32 	%f717, %f793, %f822, %f716;
	fma.rn.f32 	%f258, %f799, %f824, %f717;
	mul.f32 	%f718, %f795, %f823;
	fma.rn.f32 	%f719, %f792, %f822, %f718;
	fma.rn.f32 	%f259, %f798, %f824, %f719;
	mul.f32 	%f720, %f794, %f823;
	fma.rn.f32 	%f721, %f791, %f822, %f720;
	fma.rn.f32 	%f260, %f797, %f824, %f721;
	mul.f32 	%f722, %f796, %f820;
	fma.rn.f32 	%f723, %f793, %f819, %f722;
	fma.rn.f32 	%f799, %f799, %f821, %f723;
	mul.f32 	%f724, %f795, %f820;
	fma.rn.f32 	%f725, %f792, %f819, %f724;
	fma.rn.f32 	%f798, %f798, %f821, %f725;
	mul.f32 	%f726, %f794, %f820;
	fma.rn.f32 	%f727, %f791, %f819, %f726;
	fma.rn.f32 	%f797, %f797, %f821, %f727;
	mov.f32 	%f796, %f258;
	mov.f32 	%f795, %f259;
	mov.f32 	%f794, %f260;
	mov.f32 	%f793, %f255;
	mov.f32 	%f792, %f256;
	mov.f32 	%f791, %f257;

BB2_59:
	add.s32 	%r489, %r489, 1;
	setp.lt.u32	%p32, %r489, %r28;
	@%p32 bra 	BB2_43;

	mul.f32 	%f728, %f147, %f793;
	fma.rn.f32 	%f729, %f148, %f796, %f728;
	fma.rn.f32 	%f837, %f839, %f799, %f729;
	mul.f32 	%f730, %f147, %f792;
	fma.rn.f32 	%f731, %f148, %f795, %f730;
	fma.rn.f32 	%f838, %f839, %f798, %f731;
	mul.f32 	%f732, %f147, %f791;
	fma.rn.f32 	%f733, %f148, %f794, %f732;
	fma.rn.f32 	%f839, %f839, %f797, %f733;
	bra.uni 	BB2_61;

BB2_41:
	mov.f32 	%f837, %f147;
	mov.f32 	%f838, %f148;

BB2_61:
	mul.f32 	%f734, %f838, %f838;
	fma.rn.f32 	%f735, %f837, %f837, %f734;
	fma.rn.f32 	%f736, %f839, %f839, %f735;
	sqrt.rn.f32 	%f737, %f736;
	rcp.rn.f32 	%f738, %f737;
	mul.f32 	%f840, %f837, %f738;
	mul.f32 	%f841, %f838, %f738;
	mul.f32 	%f842, %f839, %f738;

BB2_62:
	cvt.rn.f32.u32	%f739, %r1;
	mov.b32 	 %r478, %f739;
	// inline asm
	call _optix_set_payload_0, (%r478);
	// inline asm
	mov.b32 	 %r479, %f840;
	// inline asm
	call _optix_set_payload_1, (%r479);
	// inline asm
	mov.b32 	 %r480, %f841;
	// inline asm
	call _optix_set_payload_2, (%r480);
	// inline asm
	mov.b32 	 %r481, %f842;
	// inline asm
	call _optix_set_payload_3, (%r481);
	// inline asm
	ret;
}


