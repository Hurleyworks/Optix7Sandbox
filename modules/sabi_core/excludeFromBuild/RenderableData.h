// This header file was auto-generated by ClassMate++
// Created: 16 Sep 2017 5:37:16 pm
// Copyright (c) 2017, HurleyWorks

#pragma once


// FIXME put this in it's own header or something
struct RenderableData
{
	sabi::MeshBuffersHandle mesh = nullptr;
	std::string name = "unnamed";
	ItemID sceneID = INVALID_ID;
	BodyID clientID = INVALID_ID;
	ItemID sourceID = INVALID_ID; // for instances
	sabi::SpaceTime spacetime;
	sabi::RenderableDesc desc;
	sabi::RenderableState state;

	void debug()
	{
		LOG(DBUG) << "name: " << name;
		LOG(DBUG) << "sceneID: " << sceneID;
		LOG(DBUG) << "clientID: " << clientID;
		LOG(DBUG) << "instanaced from ID: " << sourceID;
		LOG(DBUG) << "state: " << state.toString();
		desc.debug();

		matStr4f(spacetime.worldTransform, DBUG, "World transform");
		vecStr3f(spacetime.scale, DBUG, "Scale");

		if (mesh)
		{
			LOG(DBUG) << "Mesh has " << mesh->pointCount() << " vertices";
			LOG(DBUG) << "Mesh has " << mesh->triangleCount() << " triangles";
		}

	}
};

