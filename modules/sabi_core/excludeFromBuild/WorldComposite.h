// This header file was auto-generated by ClassMate++
// Created: 29 Dec 2018 1:52:03 pm
// Copyright (c) 2018, HurleyWorks

#pragma  once

class WorldComposite : public Renderable
{
	// a world composite has children who may 
	// be items or other composites

 public:
	static RenderableNode create() { return std::make_shared<WorldComposite>(); }

 public:
	WorldComposite();
	~WorldComposite();

	void addChild(RenderableNode node) override;
	RenderableNode createClone (RenderableNode source) override;
	void removeChild(RenderableNode node) override;
	bool hasChild(RenderableNode node) const override;
	RenderableNode findChild(ItemID itemID) override;
	void removeChildren() override;

 private:
	

}; // end class WorldComposite
