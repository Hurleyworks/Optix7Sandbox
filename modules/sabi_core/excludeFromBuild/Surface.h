// This header file was auto-generated by ClassMate++
// Created: 16 Sep 2017 5:37:16 pm
// Copyright (c) 2017, HurleyWorks

#pragma once

class Surface
{
	//  A surface is a collection of triangles with a specific Material and a Name

 public:
	Surface (const std::string & name = "default");
	~Surface ();

	MatrixXu & indices() { return F; }
	const MatrixXu & indices() const { return F; }
	const size_t triangleCount() const { return F.cols(); }
	void setName(const std::string & name) { this->name = name; }
	const std::string getName() const { return name; }

	void setMaterail(const Material & m) { material = m; }
	const Material & getMaterial() const { return material; }
	Material & getMaterial()  { return material; }

 private:
	MatrixXu F; // triangle indices
	std::string name = "default";
	Material material;

}; // end class Surface

using Surfaces = std::vector<sabi::Surface>;