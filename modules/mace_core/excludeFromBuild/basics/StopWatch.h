// This header file was auto-generated by ClassMate++
// Created: 22 Feb 2019 8:55:26 pm
// Copyright (c) 2019, HurleyWorks

#pragma  once

// from the Code Blacksmith
// https://www.youtube.com/watch?v=GV0JMHOpoEw
class ScopedStopWatch
{

public:
	using Clock = std::conditional_t < std::chrono::high_resolution_clock::is_steady,
											std::chrono::high_resolution_clock,
											std::chrono::steady_clock>;
	ScopedStopWatch(const char function[] = "unknown function")
		: func(function)
	{
	}
	~ScopedStopWatch()
	{
		LOG(DBUG) << "\n" << func << " took " << std::chrono::duration_cast<std::chrono::milliseconds>(Clock::now() - start).count() << " milliseconds";
	}

private:
	const char * func = nullptr;
	Clock::time_point start = Clock::now();
};