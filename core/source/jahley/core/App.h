// This header file was auto-generated by ClassMate++
// Created: 26 Jan 2019 8:47:47 pm
// Copyright (c) 2019, HurleyWorks

#pragma once

#include "Log.h"
#include "window/WindowData.h"
#include "window/InputHandler.h"
#include "window/platform/opengl/OpenglWindow.h"
#include "window/RenderStack.h"
#include "window/NanoguiLayer.h"
#include  "window/OptixLayer.h"

namespace Jahley
{ 
	class App : public CsSignal::SlotBase
	{
	  public:
		virtual ~App();

		virtual void run();
		virtual void update() {}
		virtual void onInit() {}

		bool isWindowApp() const { return windowApp; }

		// rendering
		void pushLayer(RenderLayerRef layer, bool attach);
		void pushOverlay(RenderLayerRef layer, bool attach);

		void onInputEvent(InputEvent e);

		// crash handling
		void preCrash();
		void onFatalError(g3::FatalMessagePtr fatal_message);

	  protected:
		App(DesktopWindowSettings settings = DesktopWindowSettings(), bool windowApp = false);
		bool isRunning = true;
		InputHandler input;
		OpenglWindowHandle window;

	  private:
		bool windowApp = false;
		FatalErrorCallback errorCallback = nullptr;
		PreCrashCallback preCrashCallback = nullptr;
		
		LogHandler log;
		int refreshRate = DEFAULT_DESKTOP_WINDOW_REFRESH_RATE; // 60 fps
		std::chrono::milliseconds refreshTime;
		Vector4f bgColor = DEFAULT_DESKTOP_WINDOW_BACKGROUND_COLOR;

		RenderStack layers;

	}; // end class App

	// Implemented by CLIENT
	App* CreateApplication();
}