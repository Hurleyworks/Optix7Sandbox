// This header file was auto-generated by ClassMate++
// Created: 18 Aug 2019 4:00:14 pm
// Copyright (c) 2019, HurleyWorks

#pragma once

#include <optix7_core/optix7_core.h>

using Eigen::Vector3f;
using Eigen::Quaternionf;
using Eigen::AngleAxisf;

class OptixScene : public OptixEngine
{

 public:
	OptixScene (const PropertyService& properties);
	~OptixScene ();

	void init(CameraHandle& camera) override;
	void addPipeline(PipelineType type, const json& groups, OptixConfig& config ) override;
	void addRenderable(RenderableNode& node, bool rebuildAccel = true) override;
	void addRenderableList(const RenderableList&& nodes) override;
	void clearScene() override;
	void onInput(const InputEvent& input) override { this->input = input; }

	void render(CameraHandle& camera) override
	{		
		applyMotion();

		renderer->render(camera, OptixEngine::getPtr(), input);
	}
	
 private:
	RendererHandle renderer = nullptr;
	OptixConfig dreamerConfig;
	InputEvent input;
	uint32_t lastMeshCount = 0;
	
	void applyMotion();

}; // end class OptixScene
