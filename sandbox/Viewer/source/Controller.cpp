// This source file was auto-generated by ClassMate++
// Created: 18 Aug 2019 6:10:35 am
// Copyright (c) 2019, HurleyWorks

#include "Controller.h"
using Eigen::Vector2f;

// ctor
Controller::Controller (const PropertyService& properties)
	: properties(properties)
{	
}

void Controller::onInput(const InputEvent& e, CameraHandle& camera)
{
	switch (e.getType())
	{
		case InputEvent::Press:
			camera->startTracking();
			camera->track(Vector2f(e.getX(), e.getY()));
			break;

		case InputEvent::Release:
			camera->setDirty(false);
			break;

		case InputEvent::Move:
			break;

		case InputEvent::ScrollUp:
			camera->zoom(DEFAULT_ZOOM_FACTOR);
			properties.renderProps->setValue(RenderKey::ResetAccumulator, true);
			break;

		case InputEvent::ScrollDown:
			camera->zoom(DEFAULT_ZOOM_FACTOR * -1);
			properties.renderProps->setValue(RenderKey::ResetAccumulator, true);
			break;

		case InputEvent::Drag:
			camera->track(Vector2f(e.getX(), e.getY()));
			camera->setDirty(true);
			properties.renderProps->setValue(RenderKey::ResetAccumulator, true);
			break;
	}
}

